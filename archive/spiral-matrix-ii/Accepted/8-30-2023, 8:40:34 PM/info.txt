{"id":1036482981,"lang":"python3","lang_name":"Python3","time":"1 week, 5 days","timestamp":1693453234,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/1036482981/","is_pending":"Not Pending","title":"Spiral Matrix II","memory":"16.5 MB","code":"class Solution:\n    def generateMatrix(self, n: int) -> List[List[int]]:\n        DIRS = ((0, 1), (1, 0), (0, -1), (-1, 0))\n        dir_idx = 0\n\n        def forward(i, j, direction):\n            return map(sum, zip((i, j), direction))\n\n        def backward(i, j, direction):\n            return map(sum, zip((i, j), map(neg, direction)))\n\n        def turn_right(dir_idx):\n            return (dir_idx + 1) % 4\n\n        mat = [[None] * n for _ in range(n)]\n        i = j = 0\n        e = 1\n        while e <= n ** 2:\n            while 0 <= i < n and 0 <= j < n and mat[i][j] is None:\n                mat[i][j] = e\n                e += 1\n                i, j = forward(i, j, DIRS[dir_idx])\n            i, j = backward(i, j, DIRS[dir_idx])\n            dir_idx = turn_right(dir_idx)\n            i, j = forward(i, j, DIRS[dir_idx])\n        return mat\n","compare_result":"11111111111111111111","title_slug":"spiral-matrix-ii","has_notes":false,"flag_type":1}