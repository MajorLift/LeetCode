{"id":389889823,"lang":"python3","lang_name":"Python3","time":"3Â years","timestamp":1599039801,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/389889823/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution:\n    def longestPalindrome(self, s: str) -> str:\n        resleft = 0\n        resright = 0\n        reslen = 0\n        \n        for curr in range(1,len(s)):\n            left = curr\n            right = curr\n            if s[curr] == s[curr-1]:\n                left = curr-1\n            if curr < len(s)-1 and s[curr+1] == s[curr-1]:\n                left = curr\n                \n            while left >= 0 and right < len(s):\n                if s[left] != s[right]:\n                    break\n                else:\n                    if right - left + 1 > reslen:\n                        resleft = left\n                        resright = right\n                        reslen = right - left + 1\n                    left -= 1\n                    right += 1\n        \n        return s[resleft:resright+1]","compare_result":"1111111111011111111111111110111111111111111111111111111111111111111111111111111111111111010000000000100","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}