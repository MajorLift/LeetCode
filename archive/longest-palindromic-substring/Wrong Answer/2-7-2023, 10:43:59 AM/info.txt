{"id":893546396,"lang":"python3","lang_name":"Python3","time":"7Â months","timestamp":1675795439,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/893546396/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution:\n    def longestPalindrome(self, s: str) -> str:\n        n = len(s)\n        memo = [[True if i == j else False for j in range(n)] for i in range(n)]\n        max_idx = -1, -1\n        for l in range(n - 1):\n            for r in range(l + 1, n):\n                if s[l] == s[r] and (r - l == 1 or memo[l + 1][r - 1]):\n                    memo[l][r] = True\n                    max_idx = max(max_idx, (l, r), key=lambda x: x[1] - x[0])\n        l, r = max_idx\n        return s[l:r + 1]","compare_result":"110011111011001110100100000000000011000000000000000000000000000000001000000000000000000000000000100000000100000000000000000000000000000000000","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}