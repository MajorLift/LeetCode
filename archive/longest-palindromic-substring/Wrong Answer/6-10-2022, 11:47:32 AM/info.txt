{"id":719087360,"lang":"python3","lang_name":"Python3","time":"1 year, 3 months","timestamp":1654886852,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/719087360/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution:\n    def longestPalindrome(self, s: str) -> str:\n        memo = [0] * len(s)\n        for i in range(len(s) - 1):\n            if s[i + 1] == s[i]:\n                memo[i] = 1\n            elif i > 0 and s[i - 1] == s [i + 1]:\n                memo[i] = 2\n        \n        max_len = -float('inf')\n        curr_len = 0\n        for i in range(len(memo)):\n            if memo[i] == 1:\n                curr_len = 2\n                k = 1\n                while i - k >= 0 and i + 1 + k < len(s):\n                    if s[i - k] == s[i + 1 + k]:\n                        k += 1\n                        curr_len += 2\n                    else:\n                        break\n            elif memo[i] == 2:\n                curr_len = 3\n                k = 1\n                while i - 1 - k >= 0 and i + 1 + k < len(s):\n                    if s[i - 1 - k] == s[i + 1 + k]:\n                        k += 1\n                        curr_len += 2\n                    else:\n                        break\n            if curr_len > max_len:\n                max_len = curr_len\n                \n        return max_len","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}