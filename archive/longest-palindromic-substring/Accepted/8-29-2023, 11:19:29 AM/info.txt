{"id":1035310526,"lang":"python3","lang_name":"Python3","time":"1Â week, 6Â days","timestamp":1693333169,"status":10,"status_display":"Accepted","runtime":"359 ms","url":"/submissions/detail/1035310526/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"16.4 MB","code":"class Solution:\n    def longestPalindrome(self, s: str) -> str:\n        n = len(s)\n        def expand(l, r):\n            while l >= 0 and r < n and s[l] == s[r]:\n                l -= 1\n                r += 1\n            return (r - 1) - (l + 1) + 1\n        (global_max, (start, end)) = (0, (0, 0))\n        for i in range(n):\n            local_max = max(expand(i, i + 1), expand(i - 1, i + 1))\n            global_max, (start, end) = max(\n                (global_max, (start, end)),\n                (local_max, (i - (local_max - 1) // 2, i + local_max // 2)),\n                key=lambda x: x[0]\n            )\n        return s[start:end + 1]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}