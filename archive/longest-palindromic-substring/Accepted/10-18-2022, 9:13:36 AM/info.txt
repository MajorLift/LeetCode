{"id":825286391,"lang":"python3","lang_name":"Python3","time":"10 months, 4 weeks","timestamp":1666109616,"status":10,"status_display":"Accepted","runtime":"1433 ms","url":"/submissions/detail/825286391/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"13.8 MB","code":"class Solution:\n    def longestPalindrome(self, s: str) -> str:\n        n = len(s)\n        start = end = 0\n\n        def expand(left, right):\n            l, r = left, right\n            while l >= 0 and r < n and s[l] == s[r]:\n                l -= 1\n                r += 1\n            return r - l - 1\n\n        for i in range(n):\n            curr_maxlen = max(expand(i, i), expand(i, i + 1))\n            if curr_maxlen > end - start:\n                start = i - (curr_maxlen - 1) // 2\n                end = i + curr_maxlen // 2\n\n        return s[start:end+1]","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}