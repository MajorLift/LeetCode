{"id":893573986,"lang":"python3","lang_name":"Python3","time":"7Â months","timestamp":1675798253,"status":10,"status_display":"Accepted","runtime":"462 ms","url":"/submissions/detail/893573986/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"13.9 MB","code":"class Solution:\n    def longestPalindrome(self, s: str) -> str:\n        n = len(s)\n        def expand(l, r):\n            while l >= 0 and r < n and s[l] == s[r]:\n                l -= 1\n                r += 1\n            return (l + 1, r - 1)\n\n        max_idx = 0, 0\n        for i in range(n):\n            max_idx = max(max_idx, expand(i, i + 1), expand(i - 1, i + 1), key=lambda x: x[1] - x[0])\n        l, r = max_idx\n        return s[l:r + 1]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}