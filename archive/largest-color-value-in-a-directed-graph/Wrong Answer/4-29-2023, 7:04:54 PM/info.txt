{"id":941836250,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682820294,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/941836250/","is_pending":"Not Pending","title":"Largest Color Value in a Directed Graph","memory":"N/A","code":"class Solution:\r\n    def largestPathValue(self, colors: str, edges: List[List[int]]) -> int:\r\n        n, m = map(len, (colors, edges))\r\n        adj = [[] for _ in range(n)]\r\n        for u, v in edges:\r\n            adj[u].append(v)\r\n        \r\n        @cache\r\n        def dp(start):\r\n            visited, cnt = set(), defaultdict(int)\r\n            @cache\r\n            def dfs(node):\r\n                if node in visited:\r\n                    return -1\r\n                cnt[colors[node]] += 1\r\n                if not adj[node]:\r\n                    return max(cnt.values())\r\n                visited.add(node)\r\n                return max([dfs(v) for v in adj[node]])\r\n            return dfs(start)\r\n        \r\n        return max([dp(i) for i in range(n)])","compare_result":"11100110111110010111111010001101111110000100010011000000000000000000000000000000000","title_slug":"largest-color-value-in-a-directed-graph","has_notes":false,"flag_type":1}