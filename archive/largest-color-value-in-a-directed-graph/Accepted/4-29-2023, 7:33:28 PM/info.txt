{"id":941842883,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682822008,"status":10,"status_display":"Accepted","runtime":"3011 ms","url":"/submissions/detail/941842883/","is_pending":"Not Pending","title":"Largest Color Value in a Directed Graph","memory":"202.2 MB","code":"class Solution:\r\n    def largestPathValue(self, colors: str, edges: List[List[int]]) -> int:\r\n        n, m = map(len, (colors, edges))\r\n        adj = [[] for _ in range(n)]\r\n        for u, v in edges:\r\n            adj[u].append(v)\r\n        \r\n        ans = -1\r\n        visited, cycle, cnt = set(), set(), [[0] * 26 for _ in range(n)]\r\n        def dfs(node):\r\n            nonlocal ans\r\n            if node in cycle:\r\n                return True\r\n            if node in visited:\r\n                return False\r\n            visited.add(node)\r\n            cycle.add(node)\r\n            for v in adj[node]:\r\n                if dfs(v):\r\n                    return True\r\n                for color in range(26):\r\n                    cnt[node][color] = max(cnt[node][color], cnt[v][color])\r\n            cycle.remove(node)\r\n            cnt[node][ord(colors[node]) - ord(\"a\")] += 1\r\n            ans = max(ans, cnt[node][ord(colors[node]) - ord(\"a\")])\r\n            return False\r\n        \r\n        for i in range(n):\r\n            if i not in visited:\r\n                if dfs(i):\r\n                    return -1\r\n        return ans\r\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-color-value-in-a-directed-graph","has_notes":true,"flag_type":1}