{"id":977513040,"lang":"python3","lang_name":"Python3","time":"2 months, 3 weeks","timestamp":1687487246,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/977513040/","is_pending":"Not Pending","title":"Minimum Cost to Make Array Equal","memory":"N/A","code":"class Solution:\n    def minCost(self, nums: List[int], costs: List[int]) -> int:\n        pairs = [(num, cost) for num, cost in zip(nums, costs)]\n        pairs.sort(key=lambda x: x[0])\n        global_min = +inf\n        for i, (base, _) in enumerate(pairs):\n            total_cost = 0\n            for num, cost in pairs[:i] + pairs[i+1:]:\n                total_cost += abs(base - num) * cost\n            global_min = min(global_min, total_cost)\n        return global_min","compare_result":"111111111111111111111111111111111111100000000000","title_slug":"minimum-cost-to-make-array-equal","has_notes":false,"flag_type":1}