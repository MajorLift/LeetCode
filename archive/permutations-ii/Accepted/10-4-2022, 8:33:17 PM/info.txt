{"id":815453563,"lang":"python3","lang_name":"Python3","time":"11Â months, 1Â week","timestamp":1664940797,"status":10,"status_display":"Accepted","runtime":"191 ms","url":"/submissions/detail/815453563/","is_pending":"Not Pending","title":"Permutations II","memory":"14.3 MB","code":"class Solution:\n    def permuteUnique(self, nums: List[int]) -> List[List[int]]:\n        n = len(nums)\n        output: List[List[int]] = []\n        nums = sorted(nums)\n        def backtrack(tmp: List[int] = [], used: List[bool] = [False] * n) -> None:\n            nonlocal output, nums\n            if len(tmp) == len(nums):\n                output.append(tmp)\n                return\n            for i in range(n):\n                if used[i] or (i > 0 and nums[i] == nums[i - 1] and used[i - 1]):\n                    continue\n                backtrack(tmp + [nums[i]], used[:i] + [True] + used[i+1:])\n        backtrack()\n        return output","compare_result":"111111111111111111111111111111111","title_slug":"permutations-ii","has_notes":false,"flag_type":1}