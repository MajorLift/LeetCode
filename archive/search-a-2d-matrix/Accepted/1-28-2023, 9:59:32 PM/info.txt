{"id":887286822,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674971972,"status":10,"status_display":"Accepted","runtime":"51 ms","url":"/submissions/detail/887286822/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"14.4 MB","code":"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        m, n = len(matrix), len(matrix[0])\n        flattened = [e for row in matrix for e in row]\n        idx = bisect_left(flattened, target)\n        return idx < m * n and flattened[idx] == target","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix","has_notes":false,"flag_type":1}