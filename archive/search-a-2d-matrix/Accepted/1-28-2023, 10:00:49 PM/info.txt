{"id":887287455,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674972049,"status":10,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/887287455/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"14.4 MB","code":"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        m, n = len(matrix), len(matrix[0])\n        idx = bisect_left([i for i in range(m * n)], target, key=lambda i: matrix[i // n][i % n])\n        return idx < m * n and matrix[idx // n][idx % n] == target","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix","has_notes":false,"flag_type":1}