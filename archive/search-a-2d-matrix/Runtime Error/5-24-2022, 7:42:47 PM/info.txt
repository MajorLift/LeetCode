{"id":706609684,"lang":"python3","lang_name":"Python3","time":"1 year, 3 months","timestamp":1653446567,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/706609684/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"N/A","code":"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        m, n = len(matrix), len(matrix[0])\n        left, right = 0, m - 1\n        while left <= right:\n            pivot_idx = (left + right) / 2\n            i, j = pivot_idx // n, pivot_idx % n\n            pivot_elem = matrix[i][j]\n            if pivot_elem < target:\n                right = pivot_idx - 1\n            elif pivot_elem > target:\n                left = pivot_idx + 1\n            else:\n                return True\n        return False\n                ","compare_result":"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-a-2d-matrix","has_notes":false,"flag_type":1}