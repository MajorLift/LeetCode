{"id":887283380,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674971546,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/887283380/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"N/A","code":"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        m, n = len(matrix), len(matrix[0])\n        idx = bisect_left([i for i in range(m * n)], target, key=lambda x: matrix[x // m][x % m])\n        return idx < m * n and matrix[idx // m][idx % m] == target","compare_result":"1111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-a-2d-matrix","has_notes":false,"flag_type":1}