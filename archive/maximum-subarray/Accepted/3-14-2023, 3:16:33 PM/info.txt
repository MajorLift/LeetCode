{"id":915291412,"lang":"python3","lang_name":"Python3","time":"6Â months","timestamp":1678832193,"status":10,"status_display":"Accepted","runtime":"2482 ms","url":"/submissions/detail/915291412/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"42.9 MB","code":"class Solution:\n    def maxSubArray(self, nums: List[int]) -> int:\n        def maxSubArray(l = 0, r = len(nums) - 1):\n            if l > r: \n                return -math.inf\n            mid = (l + r) // 2\n            left_sum = right_sum = curr_sum = 0\n            for i in range(mid - 1, l - 1, -1):\n                left_sum = max(left_sum, curr_sum := curr_sum + nums[i])\n            curr_sum = 0\n            for i in range(mid + 1, r + 1):\n                right_sum = max(right_sum, curr_sum := curr_sum + nums[i])\n            \n            return max(maxSubArray(l, mid - 1), \n                maxSubArray(mid + 1, r), \n                left_sum + nums[mid] + right_sum)\n        \n        return maxSubArray()","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray","has_notes":false,"flag_type":1}