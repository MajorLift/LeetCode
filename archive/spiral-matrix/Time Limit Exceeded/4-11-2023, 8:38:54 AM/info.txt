{"id":931972208,"lang":"python3","lang_name":"Python3","time":"5Â months","timestamp":1681227534,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/931972208/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"N/A","code":"class Solution:\n   def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n      DIRECTIONS = ((0, 1), (1, 0), (0, -1), (-1, 0))\n      m, n = len(matrix), len(matrix[0])\n      i = j = cnt = num_turns = 0\n      output = []\n      while cnt < m * n:\n         next_i, next_j = map(sum, zip((i, j), DIRECTIONS[num_turns % 4]))\n         if not (0 <= next_i < m and 0 <= next_j < n) or matrix[next_i][next_j] == False:\n            if cnt < m * n - 1:\n               num_turns += 1\n               continue\n            else:\n               output.append(matrix[i][j])\n               break\n         cnt += 1\n         output.append(matrix[i][j])\n         matrix[i][j] = False\n         i, j = next_i, next_j\n      return output","compare_result":"11111111000000000000000","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}