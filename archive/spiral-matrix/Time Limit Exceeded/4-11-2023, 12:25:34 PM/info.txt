{"id":932102764,"lang":"python3","lang_name":"Python3","time":"5Â months","timestamp":1681241134,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/932102764/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"N/A","code":"class Solution:\n   def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n      DIRECTIONS = ((0, 1), (1, 0), (0, -1), (-1, 0))\n      m, n = len(matrix), len(matrix[0])\n      i = j = cnt = turns = 0\n      output = []\n      while cnt < m * n:\n         while True:\n            next_i, next_j = map(sum, zip((i, j), DIRECTIONS[turns % 4]))\n            if not (0 <= next_i < m and 0 <= next_j < n) or not matrix[next_i][next_j]:\n               break\n            cnt += 1\n            output.append(matrix[i][j])\n            matrix[i][j] = False\n            i, j = next_i, next_j\n         if cnt == m * n - 1:\n            output.append(matrix[i][j])\n            break\n         else:\n            turns += 1\n      return output\n          ","compare_result":"11111111000000000000000","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}