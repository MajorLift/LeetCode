{"id":932093287,"lang":"javascript","lang_name":"JavaScript","time":"5Â months","timestamp":1681239974,"status":10,"status_display":"Accepted","runtime":"50 ms","url":"/submissions/detail/932093287/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"41.7 MB","code":"/**\n * @param {number[][]} matrix\n * @return {number[]}\n */\nvar spiralOrder = function(matrix) {\n   let [nr, nc] = [matrix.length, matrix[0].length]\n   const output = []\n   while (nr >= 1 && nc >= 1) {\n      output.push(...(matrix.shift()))\n      nr--\n\n      for (let i = 0; i < nr; ++i) {\n         output.push(matrix[i].pop())\n      }\n      nc--\n\n      if (nr === 0) break\n      output.push(...(matrix.pop().reverse()))\n      nr--\n\n      if (nc === 0) break\n      for (let i = nr - 1; i >= 0; --i) {\n         output.push(matrix[i].shift())\n      }\n      nc--\n   }\n   return output\n}","compare_result":"11111111111111111111111","title_slug":"spiral-matrix","has_notes":true,"flag_type":1}