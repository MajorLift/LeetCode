{"id":931667801,"lang":"python3","lang_name":"Python3","time":"5Â months","timestamp":1681187365,"status":10,"status_display":"Accepted","runtime":"30 ms","url":"/submissions/detail/931667801/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"13.7 MB","code":"class Solution:\n   def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n      return matrix and [*matrix.pop(0)] + self.spiralOrder(self.rotate_ccw(matrix))\n\n   def rotate_ccw(self, matrix: List[List[int]]):\n      return matrix and self.transpose(self.reflect(matrix))\n\n   def reflect(self, matrix: List[List[int]]):\n      return [list(reversed(row)) for row in matrix]\n\n   def transpose(self, matrix: List[List[int]]):\n      return [[row[j] for row in matrix] for j in range(len(matrix[0]))]","compare_result":"11111111111111111111111","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}