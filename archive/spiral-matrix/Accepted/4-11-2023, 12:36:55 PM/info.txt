{"id":932107755,"lang":"python3","lang_name":"Python3","time":"5Â months","timestamp":1681241815,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/932107755/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"13.8 MB","code":"class Solution:\n   def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n      DIRECTIONS = ((0, 1), (1, 0), (0, -1), (-1, 0))\n      m, n = len(matrix), len(matrix[0])\n      i = j = turns = 0\n      blocked = False\n      output = []\n      while True:\n         next_i, next_j = map(sum, zip((i, j), DIRECTIONS[turns % 4]))\n         if not (0 <= next_i < m and 0 <= next_j < n) or matrix[next_i][next_j] == +inf:\n            if blocked:\n               output.append(matrix[i][j])\n               break\n            else:\n               blocked = True\n               turns += 1\n               continue\n         blocked = False\n         output.append(matrix[i][j])\n         matrix[i][j] = +inf\n         i, j = next_i, next_j\n      return output\n          ","compare_result":"11111111111111111111111","title_slug":"spiral-matrix","has_notes":true,"flag_type":1}