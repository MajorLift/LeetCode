{"id":937145433,"lang":"javascript","lang_name":"JavaScript","time":"4 months, 3 weeks","timestamp":1682029982,"status":10,"status_display":"Accepted","runtime":"706 ms","url":"/submissions/detail/937145433/","is_pending":"Not Pending","title":"Detect Squares","memory":"54.6 MB","code":"var DetectSquares = function() {\n    this.points = {}\n};\n\n/** \n * @param {number[]} point\n * @return {void}\n */\nDetectSquares.prototype.add = function(point) {\n    const [x, y] = point\n    this.points[`${x},${y}`] = (this.points[`${x},${y}`] ?? 0) + 1\n};\n\n/** \n * @param {number[]} point\n * @return {number}\n */\nDetectSquares.prototype.count = function(point) {\n    const [x0, y0] = point\n    let ans = 0\n    for (const coord of Object.keys(this.points)) {\n        const [x, y] = coord.split(',').map((e) => parseInt(e))\n        if (Math.abs(x - x0) == Math.abs(y - y0) && Math.abs(x - x0) > 0) {\n            ans += this.points[`${x},${y}`] \n                * (this.points[`${x0},${y}`] ?? 0)\n                * (this.points[`${x},${y0}`] ?? 0)\n        }\n    }\n    return ans\n};\n\n/** \n * Your DetectSquares object will be instantiated and called as such:\n * var obj = new DetectSquares()\n * obj.add(point)\n * var param_2 = obj.count(point)\n */\n","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"detect-squares","has_notes":false,"flag_type":1}