{"id":939867370,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682485151,"status":10,"status_display":"Accepted","runtime":"684 ms","url":"/submissions/detail/939867370/","is_pending":"Not Pending","title":"Shortest Path Visiting All Nodes","memory":"41 MB","code":"class Solution:\n    def shortestPathLength(self, graph: List[List[int]]) -> int:\n        n = len(graph)\n        cache = dict()\n        ending_mask = (1 << n) - 1\n\n        def dfs(node, mask):\n            if (state := (node, mask)) in cache:  \n                return cache[state]    \n            if (mask | (1 << node)) == ending_mask:\n                return 0\n            cache[state] = +inf\n            for v in graph[node]:\n                if not mask & (1 << v):\n                    cache[state] = min(\n                        cache[state],\n                        1 + dfs(v, mask | 1 << node),   # visited node\n                        1 + dfs(v, mask),   # not visited node\n                    )\n            return cache[state]\n\n        return min(dfs(node, 0) for node in range(n))\n                ","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-visiting-all-nodes","has_notes":false,"flag_type":1}