{"id":888418924,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1675122188,"status":10,"status_display":"Accepted","runtime":"501 ms","url":"/submissions/detail/888418924/","is_pending":"Not Pending","title":"Number of Ways of Cutting a Pizza","memory":"44.9 MB","code":"class Solution:\n    def ways(self, pizza: List[str], k: int) -> int:\n        MOD = 10 ** 9 + 7\n        m, n = len(pizza), len(pizza[0])\n\n        @cache\n        def hasApple(coord1, coord2):\n            (x1, y1), (x2, y2) = coord1, coord2\n            return any(pizza[i][j] == \"A\" for i in range(x1, x2 + 1) for j in range(y1, y2 + 1))\n\n        @cache\n        def dp(r, c, cuts):\n            if not hasApple((r, c), (m - 1, n - 1)):\n                return 0\n            if cuts == 1:\n                return 1\n            res = 0\n            for i in range(r + 1, m):\n                if hasApple((r, c), (i - 1, n - 1)):\n                    res += dp(i, c, cuts - 1)\n            for j in range(c + 1, n):\n                if hasApple((r, c), (m - 1, j - 1)):\n                    res += dp(r, j, cuts - 1)   \n            return res % MOD\n\n        return dp(0, 0, k)","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"number-of-ways-of-cutting-a-pizza","has_notes":false,"flag_type":1}