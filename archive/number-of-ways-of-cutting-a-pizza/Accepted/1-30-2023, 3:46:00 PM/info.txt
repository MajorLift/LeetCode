{"id":888419800,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1675122360,"status":10,"status_display":"Accepted","runtime":"180 ms","url":"/submissions/detail/888419800/","is_pending":"Not Pending","title":"Number of Ways of Cutting a Pizza","memory":"16 MB","code":"class Solution:\n    def ways(self, pizza: List[str], k: int) -> int:\n        MOD = 10 ** 9 + 7\n        m, n = len(pizza), len(pizza[0])\n        \n        suffixSum = [[0] * (n + 1) for _ in range(m + 1)]\n        for i in range(m - 1, -1, -1):\n            for j in range(n - 1, -1 , -1):\n                suffixSum[i][j] = int(pizza[i][j] == \"A\") + suffixSum[i + 1][j] + suffixSum[i][j + 1] - suffixSum[i + 1][j + 1]\n\n        @cache\n        def dp(r, c, cuts):\n            if suffixSum[r][c] == 0:\n                return 0\n            if cuts == 1:\n                return 1\n            res = 0\n            for i in range(r + 1, m):\n                if suffixSum[r][c] > suffixSum[i][c]:\n                    res += dp(i, c, cuts - 1)\n            for j in range(c + 1, n):\n                if suffixSum[r][c] > suffixSum[r][j]:\n                    res += dp(r, j, cuts - 1)   \n            return res % MOD\n\n        return dp(0, 0, k)","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"number-of-ways-of-cutting-a-pizza","has_notes":false,"flag_type":1}