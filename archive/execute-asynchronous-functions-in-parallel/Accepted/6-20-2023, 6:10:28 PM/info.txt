{"id":975968972,"lang":"javascript","lang_name":"JavaScript","time":"2 months, 3 weeks","timestamp":1687309828,"status":10,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/975968972/","is_pending":"Not Pending","title":"Execute Asynchronous Functions in Parallel","memory":"42.8 MB","code":"/**\n * @param {Array<Function>} functions\n * @return {Promise<any>}\n */\nvar promiseAll = async function(functions) {\n    return new Promise((resolve, reject) => {\n        let completed = 0\n        const output = new Array(functions.length).fill(null)\n        for (const [i, func] of functions.entries()) {\n            func().then((res) => {\n                output[i] = res\n                completed += 1\n                if (completed === functions.length) resolve(output)\n            }).catch((err) => reject(err))\n        }\n    })\n};\n\n/**\n * const promise = promiseAll([() => new Promise(res => res(42))])\n * promise.then(console.log); // [42]\n */","compare_result":"111111111111111111111111111111","title_slug":"execute-asynchronous-functions-in-parallel","has_notes":false,"flag_type":1}