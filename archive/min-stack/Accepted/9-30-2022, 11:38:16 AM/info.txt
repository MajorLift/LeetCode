{"id":812215752,"lang":"python3","lang_name":"Python3","time":"11 months, 2 weeks","timestamp":1664563096,"status":10,"status_display":"Accepted","runtime":"128 ms","url":"/submissions/detail/812215752/","is_pending":"Not Pending","title":"Min Stack","memory":"17.8 MB","code":"class MinStack:\n\n    def __init__(self):\n        self.stack = []\n        self.tracker = []\n\n    def push(self, val: int) -> None:\n        self.stack.append(val)\n        if self.tracker and self.tracker[-1][0] <= val:\n            self.tracker[-1][1] += 1\n        else:\n            self.tracker.append([val, 1])\n\n    def pop(self) -> None:\n        self.stack.pop()\n        self.tracker[-1][1] -= 1\n        if self.tracker[-1][1] == 0:\n            self.tracker.pop()\n\n    def top(self) -> int:\n        return self.stack[-1]\n\n    def getMin(self) -> int:\n        return self.tracker[-1][0]\n\n\n# Your MinStack object will be instantiated and called as such:\n# obj = MinStack()\n# obj.push(val)\n# obj.pop()\n# param_3 = obj.top()\n# param_4 = obj.getMin()","compare_result":"1111111111111111111111111111111","title_slug":"min-stack","has_notes":false,"flag_type":1}