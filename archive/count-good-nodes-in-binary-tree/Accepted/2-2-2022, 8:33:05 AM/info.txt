{"id":633060449,"lang":"javascript","lang_name":"JavaScript","time":"1 year, 7 months","timestamp":1643819585,"status":10,"status_display":"Accepted","runtime":"281 ms","url":"/submissions/detail/633060449/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"78.1 MB","code":"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar goodNodes = function(root) {\n    let output = 0;\n    const stack = [[root, -Infinity]];\n    while (stack.length) {\n        const [curr, maxSoFar] = stack.pop();\n        if (curr.val >= maxSoFar) output++;\n        const newMaxSoFar = Math.max(curr.val, maxSoFar);\n        if (curr.left) stack.push([curr.left, newMaxSoFar]);\n        if (curr.right) stack.push([curr.right, newMaxSoFar]);\n    }\n    return output;\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree","has_notes":false,"flag_type":1}