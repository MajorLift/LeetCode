{"id":854684514,"lang":"python3","lang_name":"Python3","time":"9 months, 1 week","timestamp":1670190543,"status":10,"status_display":"Accepted","runtime":"4050 ms","url":"/submissions/detail/854684514/","is_pending":"Not Pending","title":"Parallel Courses III","memory":"141.8 MB","code":"class Solution:\n    def minimumTime(self, n: int, relations: List[List[int]], time: List[int]) -> int:\n        prereqs = [[] for _ in range(n)]\n        for prereq, course in relations:\n            prereqs[course - 1].append(prereq - 1)\n        @cache\n        def dp(node):\n            return time[node] + max([0] + [dp(prereq) for prereq in prereqs[node]])\n        return max(dp(node) for node in range(n))","compare_result":"111111111111111111111111111111111111111111","title_slug":"parallel-courses-iii","has_notes":false,"flag_type":1}