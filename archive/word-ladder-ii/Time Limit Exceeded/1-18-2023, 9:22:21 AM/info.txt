{"id":880682818,"lang":"python3","lang_name":"Python3","time":"7 months, 3 weeks","timestamp":1674062541,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/880682818/","is_pending":"Not Pending","title":"Word Ladder II","memory":"N/A","code":"class Solution:\n    def findLadders(self, beginWord: str, endWord: str, wordList: List[str]) -> List[List[str]]:\n        words, output = set(wordList + [beginWord]), []\n        if endWord not in words:\n            return []\n        queue = deque([(endWord, [endWord])])\n        while queue:\n            next_queue = deque()\n            while queue:\n                word, path = queue.popleft()\n                if word == beginWord:\n                    output.append(path[::-1])\n                visited = set(path)\n                for i in range(len(word)):\n                    for k in range(26):\n                        s = word[:i] + chr(ord(\"a\") + k) + word[i+1:]\n                        if s not in visited and s in words:\n                            next_queue.append((s, path + [s]))\n            if output:\n                break\n            queue = next_queue\n        return output","compare_result":"111111111111111111111111111111110000","title_slug":"word-ladder-ii","has_notes":false,"flag_type":1}