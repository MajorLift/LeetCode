{"id":847567287,"lang":"python3","lang_name":"Python3","time":"9 months, 3 weeks","timestamp":1669051856,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/847567287/","is_pending":"Not Pending","title":"Random Pick with Blacklist","memory":"N/A","code":"# class Solution:\n\n#     def __init__(self, n: int, blacklist: List[int]):\n#         self.n = n\n#         self.blacklist = set(blacklist)\n#         self.candidates = [num for num in range(self.n) if num not in self.blacklist]\n#         self.k = len(self.candidates)\n\n#     def pick(self) -> int:\n#         return self.candidates[int(random.random() * self.k)]\n\nclass Solution:\n    def __init__(self, n, blacklist):\n        self.n = n\n        blacklist.sort()\n        self.blacklist = blacklist\n        self.B = len(self.blacklist)\n        \n    def pick(self):\n        k = (random.random() * (self.n - self.B))\n        return bisect.bisect_left(self.blacklist, k)\n\n\n# Your Solution object will be instantiated and called as such:\n# obj = Solution(n, blacklist)\n# param_1 = obj.pick()","compare_result":"11111101100001110001000000011110000000000000110000000000011111110111","title_slug":"random-pick-with-blacklist","has_notes":false,"flag_type":1}