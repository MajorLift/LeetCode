{"id":885142625,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674666928,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/885142625/","is_pending":"Not Pending","title":"Course Schedule III","memory":"N/A","code":"class Solution:\n    def scheduleCourse(self, courses: List[List[int]]) -> int:\n        # courses.sort(key=lambda x: x[1])\n        pq = []\n        ans = 0\n        d = 0\n        for i, (duration, last_day) in enumerate(courses):\n            if d + duration <= last_day:\n                heappush(pq, (duration, i))\n                d += duration\n                ans += 1\n            elif pq and pq[0][0] > duration:\n                duration_shorter, j = heappop(pq)\n                d += duration - duration_shorter\n                heappush(pq, (duration_shorter, j))\n        return ans\n","compare_result":"1111111110000000000000110100000000000000000000000000000000000000000100000000000000000001001100000","title_slug":"course-schedule-iii","has_notes":false,"flag_type":1}