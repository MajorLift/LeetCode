{"id":942281902,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682886976,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/942281902/","is_pending":"Not Pending","title":"Word Search II","memory":"N/A","code":"class Solution:\n    def findWords(self, board: List[List[str]], words: List[str]) -> List[str]:\n        m, n = map(len, (board, board[0]))\n        DIRECTIONS = ((0, 1), (1, 0), (0, -1), (-1, 0))\n        self.root = TrieNode()\n        for word in words:\n            self.add(word)\n\n        output = set()\n        starts = [(board[i][j], i, j) \n            for i, j in product(range(m), range(n)) \n            if board[i][j] in self.root.children]\n        for char, x, y in starts:\n            stack = [(char, x, y)]\n            visited = set()\n            while stack:\n                prefix, r, c = stack.pop()\n                res = self.search(prefix)\n                if res is False:\n                    continue\n                elif res is True:\n                    pass\n                else:\n                    output.add(prefix)\n                for i, j in (map(sum, zip((r, c), d)) for d in DIRECTIONS):\n                    if not (0 <= i < m and 0 <= j < n) \\\n                        or (i, j) in visited:\n                        continue\n                    stack.append((prefix + board[i][j], i, j))\n                    visited.add((i, j))\n        return output\n\n    def add(self, word):\n        curr = self.root\n        for char in word:\n            if char not in curr.children:\n                curr.children[char] = TrieNode()\n            curr = curr.children[char]\n        curr.isEnd = True\n        curr.val = word\n\n    def search(self, word):\n        curr = self.root\n        for char in word:\n            if char not in curr.children:\n                return False\n            curr = curr.children[char]\n        if curr.isEnd:\n            return curr.val\n        return True\n\n\nclass TrieNode:\n    def __init__(self) -> None:\n        self.children = dict()\n        self.isEnd = False\n        self.val = None","compare_result":"11111111011011000110010000000111100101100110011110101010011111000","title_slug":"word-search-ii","has_notes":false,"flag_type":1}