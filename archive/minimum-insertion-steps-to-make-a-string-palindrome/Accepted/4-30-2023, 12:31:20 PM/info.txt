{"id":942260434,"lang":"python3","lang_name":"Python3","time":"4Â months, 2Â weeks","timestamp":1682883080,"status":10,"status_display":"Accepted","runtime":"829 ms","url":"/submissions/detail/942260434/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"185.6 MB","code":"class Solution:\n    def minInsertions(self, s: str) -> int:\n        n = len(s)\n        @cache\n        def dp(l, r):\n            if l >= r:\n                return 0\n            if s[l] == s[r]:\n                return dp(l + 1, r - 1)\n            return 1 + min(dp(l + 1, r), dp(l, r - 1))\n        return dp(0, n - 1)","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome","has_notes":false,"flag_type":1}