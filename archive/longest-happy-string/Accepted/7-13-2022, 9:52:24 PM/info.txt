{"id":746640611,"lang":"python3","lang_name":"Python3","time":"1 year, 2 months","timestamp":1657774344,"status":10,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/746640611/","is_pending":"Not Pending","title":"Longest Happy String","memory":"13.9 MB","code":"class Solution:\n    def longestDiverseString(self, *args) -> str:\n        max_heap = []\n        for i, arg in enumerate(args):\n            if arg > 0:\n                heapq.heappush(max_heap, (-arg, chr(ord('a') + i)))\n        # print(max_heap)\n        s = []\n        while True:\n            if not max_heap:\n                break\n            first, char1 = heapq.heappop(max_heap)\n            if len(s) >= 2 and s[-1] == s[-2] == char1:\n                if not max_heap:\n                    break\n                second, char2 = heapq.heappop(max_heap)\n                s.append(char2)\n                second += 1\n                if second < 0:\n                    heapq.heappush(max_heap, (second, char2))\n                heapq.heappush(max_heap, (first, char1))\n            else:\n                s.append(char1)\n                first += 1\n                if first < 0:\n                    heapq.heappush(max_heap, (first, char1))\n            # print(s, max_heap)\n        return ''.join(s)","compare_result":"1111111111111111111111111111111111","title_slug":"longest-happy-string","has_notes":false,"flag_type":1}