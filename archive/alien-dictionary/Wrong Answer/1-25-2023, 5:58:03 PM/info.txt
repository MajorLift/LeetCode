{"id":885366519,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674698283,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/885366519/","is_pending":"Not Pending","title":"Alien Dictionary","memory":"N/A","code":"class Solution:\n    def alienOrder(self, words: List[str]) -> str:\n        if not words:\n            return \"\"\n        if len(words) == 1:\n            return words[0]\n\n        adj = defaultdict(set)\n        indegrees = defaultdict(int)\n        for l, r in zip(words, words[1:]):\n            for char in [*l] + [*r]:\n                indegrees[char] += 0\n            for u, v in zip(l, r):\n                if u != v:\n                    if v not in adj[u]:\n                        adj[u].add(v)\n                        indegrees[v] += 1\n                    break\n            else:\n                if len(l) > len(r):\n                    return \"\"\n        \n        output = []\n        queue = deque([char for char in indegrees.keys() if indegrees[char] == 0])\n        print(adj, indegrees, queue)\n        while queue:\n            curr = queue.popleft()\n            print(curr)\n            output.append(curr)\n            for v in adj[curr]:\n                indegrees[v] -= 1\n                if indegrees[v] == 0:\n                    queue.append(v)\n\n        return \"\".join(output) if len(output) == len(indegrees.keys()) else \"\"","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111","title_slug":"alien-dictionary","has_notes":false,"flag_type":1}