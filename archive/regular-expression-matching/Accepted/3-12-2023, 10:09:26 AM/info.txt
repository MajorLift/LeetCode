{"id":913922752,"lang":"python3","lang_name":"Python3","time":"6Â months","timestamp":1678640966,"status":10,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/913922752/","is_pending":"Not Pending","title":"Regular Expression Matching","memory":"13.9 MB","code":"class Solution:\n    def isMatch(self, s: str, p: str) -> bool:\n        m, n = len(s), len(p)\n        memo = [[False] * (n + 1) for _ in range(m + 1)]\n        memo[-1][-1] = True\n        for i, j in product(range(m, -1, -1), range(n - 1, -1, -1)):\n            is_curr_match = i < m and p[j] in (s[i], \".\")\n            if j < n - 1 and p[j + 1] == \"*\":\n                memo[i][j] = memo[i][j + 2] or (is_curr_match and memo[i + 1][j])\n            else:\n                memo[i][j] = (is_curr_match and memo[i + 1][j + 1])\n        return memo[0][0]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"regular-expression-matching","has_notes":false,"flag_type":1}