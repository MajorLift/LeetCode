{"id":811746077,"lang":"python3","lang_name":"Python3","time":"11 months, 2 weeks","timestamp":1664501319,"status":10,"status_display":"Accepted","runtime":"79 ms","url":"/submissions/detail/811746077/","is_pending":"Not Pending","title":"Remove Comments","memory":"14 MB","code":"class Solution:\n    def removeComments(self, source: List[str]) -> List[str]:\n        block_sw = False\n        output = []\n        for line in source:\n            stripped = \"\"\n            # if newline is encountered while parsing a block comment, \n            # append subsequent output to previous non-empty line\n            if block_sw:\n                stripped = output.pop()\n            i = 0\n            while i < len(line):\n                if not block_sw:\n                    # remove line comment contents \"//\"\n                    if i < len(line) - 1 and line[i] == line[i + 1] == \"/\":\n                        break\n                    # process open block comment \"/*\"\n                    elif i < len(line) - 1 and line[i] == \"/\" and line[i + 1] == \"*\":\n                        block_sw = True\n                        i += 1 # skip next character\n                    # append non-comment code to output\n                    else:\n                        stripped += line[i]\n                # process close block comment \"*/\"\n                elif i < len(line) - 1 and line[i] == \"*\" and line[i + 1] == \"/\":\n                    block_sw = False\n                    i += 1 # skip next character\n                i += 1 # increment index\n\n            if len(stripped):\n                output.append(stripped)\n        return output","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"remove-comments","has_notes":false,"flag_type":1}