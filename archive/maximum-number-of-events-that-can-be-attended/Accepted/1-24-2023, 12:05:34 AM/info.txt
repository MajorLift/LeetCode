{"id":884237865,"lang":"python3","lang_name":"Python3","time":"7 months, 3 weeks","timestamp":1674547534,"status":10,"status_display":"Accepted","runtime":"3292 ms","url":"/submissions/detail/884237865/","is_pending":"Not Pending","title":"Maximum Number of Events That Can Be Attended","memory":"61.5 MB","code":"class Solution:\n    def maxEvents(self, events: List[List[int]]) -> int:\n        events.sort(key=lambda x: x[0])\n        ans = 0\n        i = 0\n        d = 1\n        pq = []\n        while pq or i < len(events):\n            if not pq:\n                d = events[i][0]\n            while i < len(events) and events[i][0] <= d:\n                heappush(pq, events[i][1])\n                i += 1\n            heappop(pq)\n            ans += 1\n            d += 1\n            while pq and pq[0] < d:\n                heappop(pq)\n        return ans","compare_result":"11111111111111111111111111111111111111111111","title_slug":"maximum-number-of-events-that-can-be-attended","has_notes":false,"flag_type":1}