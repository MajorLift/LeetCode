{"id":937665767,"lang":"python3","lang_name":"Python3","time":"4 months, 3 weeks","timestamp":1682124669,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/937665767/","is_pending":"Not Pending","title":"Profitable Schemes","memory":"N/A","code":"class Solution:\n    def profitableSchemes(self, n: int, minProfit: int, group: List[int], profit: List[int]) -> int:\n        @cache\n        def dp(i, spoils, idle):\n            if idle <= 0 or i == len(profit):\n                return int(spoils >= minProfit)\n            take = dp(i + 1, spoils + profit[i], idle - group[i])\n            leave = dp(i + 1, spoils, idle)\n            return take + leave\n        return dp(0, 0, n) % (10 ** 9 + 7)","compare_result":"111000001100100010001111100011001000100000000","title_slug":"profitable-schemes","has_notes":false,"flag_type":1}