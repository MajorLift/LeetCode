{"id":937666566,"lang":"python3","lang_name":"Python3","time":"4 months, 3 weeks","timestamp":1682124947,"status":10,"status_display":"Accepted","runtime":"4342 ms","url":"/submissions/detail/937666566/","is_pending":"Not Pending","title":"Profitable Schemes","memory":"690 MB","code":"class Solution:\n    def profitableSchemes(self, n: int, minProfit: int, group: List[int], profit: List[int]) -> int:\n        MOD = 10 ** 9 + 7\n        @cache\n        def dp(i, spoils, idle):\n            if idle < 0: \n                return 0\n            if i == len(profit): \n                return int(spoils == minProfit)\n            take = dp(i + 1, min(minProfit, spoils + profit[i]), idle - group[i])\n            leave = dp(i + 1, spoils, idle)\n            return take + leave\n        return dp(0, 0, n) % MOD\n","compare_result":"111111111111111111111111111111111111111111111","title_slug":"profitable-schemes","has_notes":false,"flag_type":1}