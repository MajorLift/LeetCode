{"id":886687463,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674889153,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/886687463/","is_pending":"Not Pending","title":"Paint House","memory":"N/A","code":"class Solution:\n    def minCost(self, costs: List[List[int]]) -> int:\n        n = len(costs)\n        @cache\n        def dp(idx, color):\n            if idx == n:\n                return 0\n            red, blue, green = costs[idx]\n            return min(dp(idx + 1, 0) + min(blue, green), \\\n                dp(idx + 1, 1) + min(red, green), \\\n                dp(idx + 1, 2) + min(red, blue))\n        return min(dp(0, 0), dp(0, 1), dp(0, 2))","compare_result":"1110010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"paint-house","has_notes":false,"flag_type":1}