{"id":886689563,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674889444,"status":10,"status_display":"Accepted","runtime":"106 ms","url":"/submissions/detail/886689563/","is_pending":"Not Pending","title":"Paint House","memory":"14.5 MB","code":"class Solution:\n    def minCost(self, costs: List[List[int]]) -> int:\n        n = len(costs)\n        @cache\n        def dp(idx, color):\n            if idx == n:\n                return 0\n            return costs[idx][color] + min(dp(idx + 1, (color + 1) % 3), dp(idx + 1, (color + 2) % 3))\n        return min(dp(0, 0), dp(0, 1), dp(0, 2))","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"paint-house","has_notes":false,"flag_type":1}