{"id":826202882,"lang":"python3","lang_name":"Python3","time":"10 months, 3 weeks","timestamp":1666215616,"status":10,"status_display":"Accepted","runtime":"53 ms","url":"/submissions/detail/826202882/","is_pending":"Not Pending","title":"Clone Graph","memory":"14.3 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val = 0, neighbors = None):\n        self.val = val\n        self.neighbors = neighbors if neighbors is not None else []\n\"\"\"\n\nclass Solution:\n    visited = {}\n    def cloneGraph(self, node: 'Node') -> 'Node':\n        if not node:\n            return node\n        if node in self.visited:\n            return self.visited[node]\n        self.visited[node] = clone = Node(node.val, [])\n        if node.neighbors:\n            clone.neighbors = [self.cloneGraph(v) for v in node.neighbors]\n        return clone","compare_result":"1111111111111111111111","title_slug":"clone-graph","has_notes":false,"flag_type":1}