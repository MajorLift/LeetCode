{"id":892288072,"lang":"python3","lang_name":"Python3","time":"7 months, 1 week","timestamp":1675637503,"status":10,"status_display":"Accepted","runtime":"526 ms","url":"/submissions/detail/892288072/","is_pending":"Not Pending","title":"Koko Eating Bananas","memory":"15.4 MB","code":"class Solution:\n    def minEatingSpeed(self, piles: List[int], h: int) -> int:\n        return bisect_left(range(max(piles) + 1), True, lo=1, key=lambda k: sum([math.ceil(piles[i] / k) for i in range(len(piles))]) <= h)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"koko-eating-bananas","has_notes":false,"flag_type":1}