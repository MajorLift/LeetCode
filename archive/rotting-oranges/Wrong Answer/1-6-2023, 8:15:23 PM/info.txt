{"id":873038865,"lang":"python3","lang_name":"Python3","time":"8 months, 1 week","timestamp":1673064923,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/873038865/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"N/A","code":"from multiprocessing import Pool\n\nclass Solution:\n    def init_worker(self, grid_init):\n        global grid\n        grid = grid_init\n\n    def orangesRotting(self, init: List[List[int]]):\n        self.m, self.n = len(init), len(init[0])\n        self.init = init\n        fresh = [(i, j) for i in range(self.m) for j in range(self.n) if init[i][j] == 1]\n        if not fresh: \n            return 0\n        rotten = [(i, j) for i in range(self.m) for j in range(self.n) if init[i][j] == 2]\n        if not rotten:\n            return -1\n\n        with Pool(initializer=self.init_worker, initargs=(self.init,)) as pool:\n            times = pool.map(self.dfs_wrapper, [(r, c, thread) for thread, (r, c) in enumerate(rotten)])\n            fresh = [(i, j) for i in range(self.m) for j in range(self.n) if init[i][j] == 1]\n            return max(times) if len(fresh) == 0 else -1\n    \n    def dfs(self, r, c, thread, clock = 0):\n        global grid\n        if clock > 0:\n            grid[r][c] = 2\n        print(thread, (r, c), clock), print(grid)\n        neighbors = [(i, j) for i, j in ((r - 1, c), (r + 1, c), (r, c - 1), (r, c + 1)) \\\n            if 0 <= i < self.m and 0 <= j < self.n and grid[i][j] == 1]\n        times = [self.dfs(r, c, thread, clock + 1) for r, c in neighbors]\n        return max(times or [clock])\n\n    def dfs_wrapper(self, args):\n        return self.dfs(*args)","compare_result":"011111110010110011000000010011101010101101011111010100000001011000010000000110100000111000000010001010001011000000000100000000110000010001010000000000001010110000001000001110000001110101010000001000110010010000000000110000000100110100000001000100011001000101000111001001001100000000100100101000101000010101","title_slug":"rotting-oranges","has_notes":false,"flag_type":1}