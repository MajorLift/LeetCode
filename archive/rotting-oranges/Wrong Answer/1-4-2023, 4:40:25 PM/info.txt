{"id":871560145,"lang":"python3","lang_name":"Python3","time":"8 months, 1 week","timestamp":1672879225,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/871560145/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"N/A","code":"class Solution:\n    def orangesRotting(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n\n        fresh_cnt = len([grid[i][j] for i in range(m) for j in range(n) if grid[i][j] == 1])\n        if fresh_cnt == 0:\n            return 0\n        minutes = 0\n        \n        def dfs(r, c):\n            nonlocal fresh_cnt, minutes\n            for i, j in ((r - 1, c), (r + 1, c), (r, c - 1), (r, c + 1)):\n                if fresh_cnt == 0:\n                    return\n                if 0 <= i < m and 0 <= j < n and grid[i][j] == 1:\n                    fresh_cnt -= 1\n                    grid[i][j] = 2\n                    dfs(i, j)\n            minutes += 1\n        \n        [dfs(i, j) for i, j in [(i, j) for i in range(m) for j in range(n) if grid[i][j] == 2]]\n        return minutes if fresh_cnt == 0 else -1","compare_result":"111111110010110011001000011011101010101101011111010100000011111000010001110110100000111010100010001010001111100000001100000000110000010001011000100000001010110000101000001110000001110101010000001000110010010000000000110000000100110100000001000100011001000101000111001001001100000000100100101000101000010101","title_slug":"rotting-oranges","has_notes":false,"flag_type":1}