{"id":892483683,"lang":"python3","lang_name":"Python3","time":"7 months, 1 week","timestamp":1675667145,"status":10,"status_display":"Accepted","runtime":"1240 ms","url":"/submissions/detail/892483683/","is_pending":"Not Pending","title":"Paint House III","memory":"34.9 MB","code":"class Solution:\n    def minCost(self, houses: List[int], cost: List[List[int]], m: int, n: int, target: int) -> int:\n        @cache\n        def dp(i = 0, prev_color = 0, k = 0):\n            if i == m and k == target:\n                return 0\n            if (i == m and k < target) or k > target:\n                return +math.inf\n            if houses[i] > 0:\n                return dp(i + 1, houses[i], k + 1 if houses[i] != prev_color else k)\n            return min(cost[i][color - 1] \n                + dp(i + 1, color, k + 1 if prev_color != color else k) \n                for color in range(1, n + 1))\n\n        min_cost = dp() \n        return min_cost if min_cost < +math.inf else -1","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"paint-house-iii","has_notes":false,"flag_type":1}