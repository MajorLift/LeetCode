{"id":892762976,"lang":"python3","lang_name":"Python3","time":"7 months, 1 week","timestamp":1675701793,"status":10,"status_display":"Accepted","runtime":"1245 ms","url":"/submissions/detail/892762976/","is_pending":"Not Pending","title":"Paint House III","memory":"34.9 MB","code":"class Solution:\n    def minCost(self, houses: List[int], cost: List[List[int]], m: int, n: int, target: int) -> int:\n        @cache\n        def dp(idx = 0, cnt = 0, prev_color = 0):\n            if idx == m and cnt == target:\n                return 0\n            if (idx == m and cnt < target) or cnt > target:\n                return +math.inf\n            if houses[idx] != 0:\n                return dp(idx + 1, cnt + 1 if houses[idx] != prev_color else cnt, houses[idx])\n            return min(cost[idx][color - 1] + dp(idx + 1, cnt + 1 if color != prev_color else cnt, color) for color in range(1, n + 1))\n        \n        min_cost = dp()\n        return min_cost if min_cost < +math.inf else -1","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"paint-house-iii","has_notes":false,"flag_type":1}