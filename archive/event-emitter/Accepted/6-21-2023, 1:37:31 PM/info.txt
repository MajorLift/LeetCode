{"id":976640615,"lang":"typescript","lang_name":"TypeScript","time":"2 months, 3 weeks","timestamp":1687379851,"status":10,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/976640615/","is_pending":"Not Pending","title":"Event Emitter","memory":"44.3 MB","code":"type Callback = (...args: any[]) => any;\ntype Subscription = {\n    unsubscribe: () => void\n}\n\nclass EventEmitter {\n  callbacks = {}\n\n  subscribe(eventName: string, callback: Callback): Subscription {\n    this.callbacks[eventName] = [...(this.callbacks[eventName] ?? []), callback]\n    return {\n      unsubscribe: () => {\n        this.callbacks[eventName] = this.callbacks[eventName].filter((e) => e !== callback)\n      }\n    };\n  }\n\n  emit(eventName: string, args: any[] = []): any {\n    return this.callbacks[eventName]?.map((cb) => cb(...args)) ?? []\n  }\n}\n\n/**\n * const emitter = new EventEmitter();\n *\n * // Subscribe to the onClick event with onClickCallback\n * function onClickCallback() { return 99 }\n * const sub = emitter.subscribe('onClick', onClickCallback);\n *\n * emitter.emit('onClick'); // [99]\n * sub.unsubscribe(); // undefined\n * emitter.emit('onClick'); // []\n */","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"event-emitter","has_notes":false,"flag_type":1}