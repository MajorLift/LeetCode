{"id":800000401,"lang":"python3","lang_name":"Python3","time":"12Â months","timestamp":1663196687,"status":10,"status_display":"Accepted","runtime":"77 ms","url":"/submissions/detail/800000401/","is_pending":"Not Pending","title":"Subsets II","memory":"14.2 MB","code":"class Solution:\n    def subsetsWithDup(self, nums: List[int]) -> List[List[int]]:\n        nums_sorted = sorted(nums)\n        subsets = [[]]\n        num_prev_subsets = 0\n        for i, num in enumerate(nums_sorted):\n            start_idx = num_prev_subsets if i > 0 and num == nums_sorted[i - 1] else 0\n            num_prev_subsets = len(subsets)\n            queue = deque(subsets[start_idx:])\n            while queue:\n                curr = queue.popleft().copy()\n                curr.append(num)\n                subsets.append(curr)\n        return subsets\n","compare_result":"11111111111111111111","title_slug":"subsets-ii","has_notes":false,"flag_type":1}