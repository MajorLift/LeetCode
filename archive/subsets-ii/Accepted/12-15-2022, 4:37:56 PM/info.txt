{"id":860421769,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1671151076,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/860421769/","is_pending":"Not Pending","title":"Subsets II","memory":"42.4 MB","code":"class Solution {\n    private List<List<Integer>> output = new ArrayList<>();\n    private int[] input;\n\n    public List<List<Integer>> subsetsWithDup(int[] nums) {\n        this.input = nums;\n        Arrays.sort(this.input);\n        backtrack(new ArrayList<>(), 0);\n        return this.output;\n    }\n\n    private void backtrack(List<Integer> path, int start) {\n        this.output.add(path);\n        for (int i = start; i < this.input.length; ++i) {\n            if (i > start && this.input[i] == this.input[i - 1]) continue;\n            List<Integer> newPath = new ArrayList<>(path);\n            newPath.add(this.input[i]);\n            backtrack(newPath, i + 1);\n        }\n    }\n}","compare_result":"11111111111111111111","title_slug":"subsets-ii","has_notes":false,"flag_type":1}