{"id":939248658,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682387043,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/939248658/","is_pending":"Not Pending","title":"Stock Price Fluctuation ","memory":"N/A","code":"class StockPrice:\n\n    def __init__(self):\n        self.records = dict()\n        self.corrected = set()\n        self.maxheap, self.minheap = [], []\n        self.latest = -inf\n\n    def update(self, timestamp: int, price: int) -> None:\n        if timestamp in self.records:\n            self.corrected.add(self.records[timestamp])\n        else:\n            self.latest = timestamp\n            if price in self.corrected:\n                self.corrected.remove(price)\n        self.records[timestamp] = price\n        heappush(self.maxheap, -price)\n        heappush(self.minheap, price)\n\n    def current(self) -> int:\n        return self.records[self.latest]\n\n    def maximum(self) -> int:\n        while -self.maxheap[0] in self.corrected:\n            heappop(self.maxheap)\n        return -self.maxheap[0]\n\n    def minimum(self) -> int:\n        while self.minheap[0] in self.corrected:\n            heappop(self.minheap)\n        return self.minheap[0]\n\n\n# Your StockPrice object will be instantiated and called as such:\n# obj = StockPrice()\n# obj.update(timestamp,price)\n# param_2 = obj.current()\n# param_3 = obj.maximum()\n# param_4 = obj.minimum()","compare_result":"110000000001000000","title_slug":"stock-price-fluctuation","has_notes":false,"flag_type":1}