{"id":939252222,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682387741,"status":10,"status_display":"Accepted","runtime":"760 ms","url":"/submissions/detail/939252222/","is_pending":"Not Pending","title":"Stock Price Fluctuation ","memory":"61.1 MB","code":"class StockPrice:\n\n    def __init__(self):\n        self.records = dict()\n        self.maxheap, self.minheap = [], []\n        self.latest = -inf\n\n    def update(self, timestamp: int, price: int) -> None:\n        self.records[timestamp] = price\n        heappush(self.maxheap, (-price, timestamp))\n        heappush(self.minheap, (price, timestamp))\n        self.latest = max(self.latest, timestamp)\n\n    def current(self) -> int:\n        return self.records[self.latest]\n\n    def maximum(self) -> int:\n        price, time = self.maxheap[0]\n        while -price != self.records[time]:\n            heappop(self.maxheap)\n            price, time = self.maxheap[0]\n        return -self.maxheap[0][0]\n\n    def minimum(self) -> int:\n        price, time = self.minheap[0]\n        while price != self.records[time]:\n            heappop(self.minheap)\n            price, time = self.minheap[0]\n        return self.minheap[0][0]\n\n\n# Your StockPrice object will be instantiated and called as such:\n# obj = StockPrice()\n# obj.update(timestamp,price)\n# param_2 = obj.current()\n# param_3 = obj.maximum()\n# param_4 = obj.minimum()","compare_result":"111111111111111111","title_slug":"stock-price-fluctuation","has_notes":false,"flag_type":1}