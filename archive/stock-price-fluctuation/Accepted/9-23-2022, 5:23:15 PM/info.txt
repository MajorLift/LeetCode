{"id":807170014,"lang":"python3","lang_name":"Python3","time":"11 months, 3 weeks","timestamp":1663978995,"status":10,"status_display":"Accepted","runtime":"781 ms","url":"/submissions/detail/807170014/","is_pending":"Not Pending","title":"Stock Price Fluctuation ","memory":"60.9 MB","code":"class StockPrice:\n\n    def __init__(self):\n        self.latest_time = 0\n        self.timepricemap = {} \n        self.minheap = []\n        self.maxheap = []\n\n    def update(self, timestamp: int, price: int) -> None:\n        self.timepricemap[timestamp] = price\n        self.latest_time = max(self.latest_time, timestamp)\n        heappush(self.minheap, (price, timestamp))\n        heappush(self.maxheap, (-price, timestamp))\n\n    def current(self) -> int:\n        return self.timepricemap[self.latest_time]\n\n    def maximum(self) -> int:\n        price, timestamp = self.maxheap[0]\n        while -price != self.timepricemap[timestamp]:\n            heappop(self.maxheap)\n            price, timestamp = self.maxheap[0]\n        return -price\n\n    def minimum(self) -> int:\n        price, timestamp = self.minheap[0]\n        while price != self.timepricemap[timestamp]:\n            heappop(self.minheap)\n            price, timestamp = self.minheap[0]\n        return price\n\n\n# Your StockPrice object will be instantiated and called as such:\n# obj = StockPrice()\n# obj.update(timestamp,price)\n# param_2 = obj.current()\n# param_3 = obj.maximum()\n# param_4 = obj.minimum()","compare_result":"111111111111111111","title_slug":"stock-price-fluctuation","has_notes":false,"flag_type":1}