{"id":828243546,"lang":"python3","lang_name":"Python3","time":"10 months, 3 weeks","timestamp":1666487978,"status":10,"status_display":"Accepted","runtime":"907 ms","url":"/submissions/detail/828243546/","is_pending":"Not Pending","title":"Word Ladder","memory":"15.1 MB","code":"from collections import deque\n\nclass Solution:\n    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -> int:\n        words, visited = set(wordList), set()\n        queue = deque([beginWord])\n        changes = 1\n        while queue:\n            n = len(queue)\n            for _ in range(n):\n                curr = queue.popleft()\n                if curr == endWord:\n                    return changes\n                for i in range(len(curr)):\n                    for k in range(26):\n                        s = curr[:i] + chr(ord('a') + k) + curr[i+1:]\n                        if s in words and s not in visited:\n                            queue.append(s)\n                            visited.add(s)\n            changes += 1\n        return 0","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"word-ladder","has_notes":false,"flag_type":1}