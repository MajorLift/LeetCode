{"id":880241114,"lang":"python3","lang_name":"Python3","time":"7 months, 3 weeks","timestamp":1674004025,"status":10,"status_display":"Accepted","runtime":"666 ms","url":"/submissions/detail/880241114/","is_pending":"Not Pending","title":"Word Ladder","memory":"15.1 MB","code":"class Solution:\n    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -> int:\n        words, visited = set(wordList), set()\n        queue = deque([beginWord])\n        dist = 0\n        while queue:\n            dist += 1\n            next_queue = deque([])\n            while queue:\n                word = queue.popleft()\n                if word == endWord:\n                    return dist\n                for i in range(len(word)):\n                    for k in range(26):\n                        s = word[:i] + chr(ord(\"a\") + k) + word[i+1:]\n                        if s not in visited and s in words:\n                            visited.add(s)\n                            next_queue.append(s)\n            queue = next_queue\n        return 0","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"word-ladder","has_notes":false,"flag_type":1}