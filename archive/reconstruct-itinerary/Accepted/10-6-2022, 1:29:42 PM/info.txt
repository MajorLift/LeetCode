{"id":816762198,"lang":"python3","lang_name":"Python3","time":"11Â months, 1Â week","timestamp":1665088182,"status":10,"status_display":"Accepted","runtime":"187 ms","url":"/submissions/detail/816762198/","is_pending":"Not Pending","title":"Reconstruct Itinerary","memory":"14.3 MB","code":"from collections import defaultdict, deque\n\nclass Solution:\n    def findItinerary(self, tickets: List[List[str]]) -> List[str]:\n        adj = defaultdict(list)\n        for depart, arrive in tickets:\n            adj[depart].append(arrive)\n        flights = {k: sorted(v, reverse=True) for k, v in adj.items()}\n\n        output = []\n        def dfs(depart):\n            if depart in flights:\n                stack = flights[depart]\n                while stack:\n                    dfs(stack.pop())\n            output.append(depart)\n        dfs('JFK')\n        return output[::-1]","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reconstruct-itinerary","has_notes":false,"flag_type":1}