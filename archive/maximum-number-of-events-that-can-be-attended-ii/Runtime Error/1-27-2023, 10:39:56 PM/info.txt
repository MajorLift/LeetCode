{"id":886678823,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674887996,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/886678823/","is_pending":"Not Pending","title":"Maximum Number of Events That Can Be Attended II","memory":"N/A","code":"class Solution:\n    def maxValue(self, events: List[List[int]], k: int) -> int:\n        n = len(events)\n        events.sort(key=lambda x: x[0])\n\n        @cache\n        def dp(idx = 0, quota = k):\n            if quota == 0 or idx >= n: \n                return 0\n            start, end, val = events[idx]\n            next_idx = bisect(events, end, lo=idx, key=lambda x: x[0])\n            return max(dp(idx + 1, quota), val + dp(next_idx, quota - 1))\n\n        return dp(0, k)","compare_result":"0000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-number-of-events-that-can-be-attended-ii","has_notes":false,"flag_type":1}