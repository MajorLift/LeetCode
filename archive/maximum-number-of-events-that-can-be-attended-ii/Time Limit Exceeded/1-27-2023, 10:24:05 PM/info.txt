{"id":886671739,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674887045,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/886671739/","is_pending":"Not Pending","title":"Maximum Number of Events That Can Be Attended II","memory":"N/A","code":"class Solution:\n    def maxValue(self, events: List[List[int]], k: int) -> int:\n        n = len(events)\n        events.sort(key=lambda x: x[0])\n        @cache\n        def dp(idx = 0, remaining = k):\n            if remaining == 0 or idx >= n:\n                return 0\n            start, end, val = events[idx]\n            next_idx = bisect_right([i for i in range(n)], end, lo=idx, key=lambda i: events[i][0])\n            return max(dp(idx + 1, remaining), val + dp(next_idx, remaining - 1))\n        return dp()","compare_result":"1111111111111111111111111111111111111111111111111111111110000000000","title_slug":"maximum-number-of-events-that-can-be-attended-ii","has_notes":false,"flag_type":1}