{"id":1028045912,"lang":"python3","lang_name":"Python3","time":"3Â weeks","timestamp":1692653344,"status":10,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/1028045912/","is_pending":"Not Pending","title":"Design Tic-Tac-Toe","memory":"19.2 MB","code":"class TicTacToe:\n\n    def __init__(self, n: int):\n        self.n = n\n        self.board = [None] * (n ** 2)\n\n    def move(self, row: int, col: int, player: int) -> int:\n        self.player = player\n        self.board[row * self.n + col] = self.player\n        # print(self.board, self.check_row(row), self.check_col(col), self.check_diags(row, col))\n        if any([self.check_row(row), self.check_col(col), self.check_diags(row, col)]):\n            return self.player\n        return 0\n\n    def check_row(self, row):\n        return all(self.board[self.n * row + j] == self.player for j in range(self.n))\n\n    def check_col(self, col):\n        return all(self.board[self.n * i + col] == self.player for i in range(self.n))\n\n    def check_diags(self, row, col):\n        return (row == col and all(self.board[self.n * i + i] == self.player for i in range(self.n))) \\\n            or (col == self.n - 1 - row and all(self.board[self.n * i + self.n - 1 - i] == self.player for i in range(self.n)))\n        \n            \n\n# Your TicTacToe object will be instantiated and called as such:\n# obj = TicTacToe(n)\n# param_1 = obj.move(row,col,player)","compare_result":"111111111111111111111111111111111","title_slug":"design-tic-tac-toe","has_notes":false,"flag_type":1}