{"id":832186896,"lang":"python3","lang_name":"Python3","time":"10 months, 2 weeks","timestamp":1666976790,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/832186896/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"N/A","code":"class Solution:\n    def minPathSum(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        min_sum = +math.inf\n        stack = [(grid[0][0], 0, 0)]\n        visited = set()\n        while stack:\n            curr_sum, x, y = stack.pop()\n            if x == m - 1 and y == n - 1:\n                min_sum = min(min_sum, curr_sum)\n                visited = set()\n            for i, j in (x + 1, y), (x, y + 1):\n                if 0 <= i < m and 0 <= j < n and (i, j) not in visited:\n                    stack.append((curr_sum + grid[i][j], i, j))\n                    visited.add((i, j))\n        return min_sum","compare_result":"1111111111111111111100000000000000000000000000000000000000000","title_slug":"minimum-path-sum","has_notes":false,"flag_type":1}