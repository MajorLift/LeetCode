{"id":1031728431,"lang":"python3","lang_name":"Python3","time":"2 weeks, 3 days","timestamp":1692993395,"status":10,"status_display":"Accepted","runtime":"117 ms","url":"/submissions/detail/1031728431/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"22.4 MB","code":"class Solution:\n    def minPathSum(self, grid: List[List[int]]):\n        m, n = map(len, (grid, grid[0]))\n        START, END = (0, 0), (m - 1, n - 1)\n\n        @cache\n        def dp(i, j):\n            curr_sum = 0\n            if not (0 <= i < m and 0 <= j < n):\n                return 0\n            elif i == 0 and j == 0:\n                curr_sum = grid[i][j]\n            elif i == 0:\n                curr_sum = grid[i][j] + dp(i, j - 1)\n            elif j == 0:\n                curr_sum = grid[i][j] + dp(i - 1, j)\n            else:\n                curr_sum = grid[i][j] + min(dp(i - 1, j), dp(i, j - 1))\n            return curr_sum\n\n        return dp(m - 1, n - 1)\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false,"flag_type":1}