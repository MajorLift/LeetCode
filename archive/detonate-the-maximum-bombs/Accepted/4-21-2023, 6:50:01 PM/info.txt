{"id":937676290,"lang":"python3","lang_name":"Python3","time":"4 months, 3 weeks","timestamp":1682128201,"status":10,"status_display":"Accepted","runtime":"819 ms","url":"/submissions/detail/937676290/","is_pending":"Not Pending","title":"Detonate the Maximum Bombs","memory":"14.2 MB","code":"class Solution:\n    def maximumDetonation(self, bombs: List[List[int]]) -> int:\n        n = len(bombs)\n        adj = [[] for _ in range(n)]\n        for i, j in product(range(n), range(n)):\n            if i != j and self.inRange(bombs[i], bombs[j]):\n                adj[i].append(j)\n\n        ans = 0\n        for start in range(n):\n            queue, visited = deque([start]), set([start])\n            while queue:\n                curr = queue.popleft()\n                for v in adj[curr]:\n                    if v not in visited:\n                        queue.append(v)\n                        visited.add(v)\n            ans = max(ans, len(visited))\n        return ans\n        \n    def inRange(self, s, t):\n        (x1, y1, r1), (x2, y2, _) = s, t\n        return (x1 - x2) ** 2 + (y1 - y2) ** 2 <= r1 ** 2\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"detonate-the-maximum-bombs","has_notes":true,"flag_type":1}