{"id":709604617,"lang":"python3","lang_name":"Python3","time":"1 year, 3 months","timestamp":1653807265,"status":10,"status_display":"Accepted","runtime":"1473 ms","url":"/submissions/detail/709604617/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"20.4 MB","code":"class Solution:\n    def kClosest(self, points: List[List[int]], k: int) -> List[List[int]]:\n        dist = [\n            (-math.sqrt(point[0] ** 2 + point[1] ** 2), i) \n                for i, point in enumerate(points)\n        ]\n        heap = [dist[j] for j in range(k)]\n        heapq.heapify(heap)\n        [\n            heapq.heappushpop(heap, (dist[i][0], i)) \n                for i in range(k, len(points)) \n                if dist[i][0] > heap[0][0]\n        ]\n        return [points[i] for (_, i) in heap]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"k-closest-points-to-origin","has_notes":false,"flag_type":1}