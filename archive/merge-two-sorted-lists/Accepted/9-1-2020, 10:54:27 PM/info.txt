{"id":389806308,"lang":"python3","lang_name":"Python3","time":"3Â years","timestamp":1599026067,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/389806308/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.1 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:\n        if not l1:\n            return l2\n        if not l2:\n            return l1\n\n        small = l1\n        large = l2\n        if l1.val > l2.val:\n            small = l2\n            large = l1\n        head = small\n        \n        while small and large:\n            if small.val > large.val:\n                tmp = small\n                small = large\n                large = tmp\n                \n            if small.next:                   \n                if small.next.val > large.val:\n                    tmp = large.next\n                    large.next = small.next\n                    small.next = large\n                    large = tmp\n                    small = small.next\n                else:\n                    if large.next and \\\n                    small.next.val > large.next.val:\n                        large = large.next\n                    small = small.next                    \n\n            else:\n                small.next = large\n                break\n                \n        return head\n\n\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}