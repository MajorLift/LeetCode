{"id":1040703949,"lang":"python3","lang_name":"Python3","time":"1Â week","timestamp":1693863679,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1040703949/","is_pending":"Not Pending","title":"Sum of Two Integers","memory":"N/A","code":"class Solution:\n    def getSum(self, a: int, b: int) -> int:\n\n        def to_binary_string(x: int) -> str:\n            output = bin(x)[2:].rjust(32, '0')\n            return output if x >= 0 else twos_complement(output)\n\n        def twos_complement(s: str) -> str:\n            i = len(s) - 1\n            while i >= 0 and s[i] == '0':\n                i -= 1\n            return s if i == -1 else ''.join(['0' if e == '1' else '1' for e in s[:i]] + [s[i:]])\n\n        def full_adder(x, y, carry_in):\n            sum_, carry_out = x ^ y ^ carry_in, (x & y) ^ (carry_in & (x ^ y))\n            return sum_, carry_out\n\n        def carry_save_adder(a, b):\n            output = sum_ = carry = 0\n            for i in range(31, -1, -1):\n                x, y = map(int, (a[i], b[i]))\n                sum_, carry = full_adder(x, y, carry)\n                output ^= sum_ << (31 - i)\n            return output\n\n        x, y = map(to_binary_string, (a, b))\n        res = carry_save_adder(x, y)\n        return res if ~(res & (1 << 31)) else -1 * int(twos_complement(to_binary_string(res)), 2)","compare_result":"111111111101100000000000001","title_slug":"sum-of-two-integers","has_notes":false,"flag_type":1}