{"id":890432462,"lang":"python3","lang_name":"Python3","time":"7 months, 1 week","timestamp":1675392455,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/890432462/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"N/A","code":"class Solution:\n    def minWindow(self, space: str, target: str) -> str:\n        target = set([*target])\n        if not target or not space or not target.issubset(set([*space])):\n            return None\n\n        s, n = len(target), len(space)\n        global_min_len, global_min_idx = +math.inf, (-1, -1)\n        win_chars = defaultdict(int)\n        l = r = 0\n        while r < n:\n            while r < n and not target.issubset(win_chars.keys()):\n                win_chars[space[r]] += 1\n                r += 1\n            while target.issubset(win_chars.keys()):\n                if r - l + 1 < global_min_len:\n                    global_min_len = r - l + 1\n                    global_min_idx = (l, r)\n                if win_chars[space[l]] > 0:\n                    win_chars[space[l]] -= 1\n                    if win_chars[space[l]] == 0:\n                        del win_chars[space[l]]\n                    l += 1\n\n        if global_min_len < +math.inf:\n            i, j = global_min_idx\n            return space[i:j]\n        return None\n","compare_result":"110001100011111110001100011110011011010011111000000100000000000000011001110111000000000000011001000000000001011010111000100100000000100100000000000001000000000010010001100010010011110000100101000000000000000000000000111001010000000010000001001000100000001110000001001","title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}