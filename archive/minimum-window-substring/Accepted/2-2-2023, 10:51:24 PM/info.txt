{"id":890537537,"lang":"python3","lang_name":"Python3","time":"7 months, 1 week","timestamp":1675407084,"status":10,"status_display":"Accepted","runtime":"966 ms","url":"/submissions/detail/890537537/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"14.7 MB","code":"class Solution:\n    def minWindow(self, s: str, t: str) -> str:\n        if not t or not s or any(Counter(s)[k] < Counter(t)[k] for k in set(t)):\n            return \"\"\n        min_len, min_idx = +math.inf, (-1, -1)\n        target = Counter(t)\n        window = {char: 0 for char in target}\n\n        l = r = 0\n        while r < len(s):\n            while r < len(s) and any(window[k] < target[k] for k in target):\n                if s[r] in target:\n                    window[s[r]] += 1\n                r += 1\n            \n            while all(window[k] >= target[k] for k in target):\n                if r - l + 1 < min_len:\n                    min_len = r - l + 1\n                    min_idx = (l, r)\n                \n                if s[l] in target:\n                    window[s[l]] -= 1\n                l += 1\n\n        if min_len == +math.inf:\n            return \"\"\n        i, j = min_idx\n        return s[i:j]\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}