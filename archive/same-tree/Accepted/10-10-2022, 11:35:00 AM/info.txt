{"id":819567770,"lang":"python3","lang_name":"Python3","time":"11Â months","timestamp":1665426900,"status":10,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/819567770/","is_pending":"Not Pending","title":"Same Tree","memory":"13.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:\n        if not p and not q:\n            return True\n        if not p or not q:\n            return False\n        queue_p, queue_q = deque([p]), deque([q])\n        while queue_p and queue_q:\n            curr_p, curr_q = queue_p.popleft(), queue_q.popleft()\n            if curr_p and curr_q:\n                if curr_p.val != curr_q.val:\n                    return False\n                queue_p.append(curr_p.left)\n                queue_p.append(curr_p.right)\n                queue_q.append(curr_q.left)\n                queue_q.append(curr_q.right)\n            elif not curr_p and not curr_q:\n                continue\n            else:\n                return False\n        return True\n","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"same-tree","has_notes":false,"flag_type":1}