{"id":303199371,"lang":"c","lang_name":"C","time":"3 years, 7 months","timestamp":1581670971,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/303199371/","is_pending":"Not Pending","title":"Valid Parentheses","memory":"7 MB","code":"// bool isValid(char* s) {\n//     int len = strlen(s);\n//     if(len%2) return false;\n    \n//     int limit = len/2;\n//     char *stack = malloc(limit);\n//     int idx = 0;\n    \n//     for(int i=0; i<len; ++i){\n//         char cur = s[i];\n//         if(cur=='(' || cur=='{' || cur=='['){\n//             if(idx == limit) return false;\n//             stack[idx++] = cur;\n//         }else{\n//             if(idx == 0) return false;\n//             if(cur == '}' && stack[idx-1] == '{' || cur == ']' && stack[idx-1] == '[' || cur == ')' && stack[idx-1] == '('){\n//                 idx--;\n//             }else{\n//                 return false;\n//             }\n//         }\n//     }\n    \n//     free(stack);\n//     return idx==0;\n// }\n\nbool isValid(char * s){\n    int len = strlen(s);\n    if(len % 2 == 1) return false;\n    \n    int limit = len / 2;\n    char* stack = (char*) malloc(sizeof(char) * limit);\n    int idx = 0;\n    int i = 0;\n    \n    while(i < len){\n        int curr = s[i];\n        if(curr == '(' || curr == '{' || curr == '['){\n            if(idx == limit) return false;\n            stack[idx++] = curr;\n            i++;\n        }\n        else{\n            if(idx == 0) return false;\n            if(curr == ')' && stack[idx-1] == '(' || \\\n               curr == '}' && stack[idx-1] == '{' || \\\n               curr == ']' && stack[idx-1] == '['){\n                idx--;\n                i++;\n            }\n            else return false;\n        }\n    }\n    free(stack);\n    return idx == 0;\n}\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-parentheses","has_notes":false,"flag_type":1}