{"id":816650790,"lang":"python3","lang_name":"Python3","time":"11 months, 1 week","timestamp":1665077421,"status":10,"status_display":"Accepted","runtime":"67 ms","url":"/submissions/detail/816650790/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"14.2 MB","code":"class Solution:\n    def generateParenthesis(self, n: int) -> List[str]:\n        output = []\n        def backtrack(tmp = \"(\", numOpen = 1, numClose = 0):\n            if numOpen == numClose == n:\n                output.append(tmp)\n                return\n            if numOpen < n:\n                backtrack(tmp + \"(\", numOpen + 1, numClose)\n            if numClose < numOpen <= n:\n                backtrack(tmp + \")\", numOpen, numClose + 1)\n        backtrack()\n        return output","compare_result":"11111111","title_slug":"generate-parentheses","has_notes":false,"flag_type":1}