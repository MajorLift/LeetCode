{"id":939616500,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682442206,"status":10,"status_display":"Accepted","runtime":"901 ms","url":"/submissions/detail/939616500/","is_pending":"Not Pending","title":"Find All Possible Recipes from Given Supplies","memory":"17.2 MB","code":"class Solution:\n    def findAllRecipes(self, recipes: List[str], ingredients: List[List[str]], supplies: List[str]) -> List[str]:\n        n = len(recipes)\n        receipes = set(recipes)\n        adj = defaultdict(list)\n        indegree = {dish: len(reqs) for reqs, dish in zip(ingredients, recipes)}\n        for reqs, dish in zip(ingredients, recipes):\n            for req in reqs:\n                adj[req].append(dish)\n        all_ingredients = set([e for row in ingredients for e in row])\n        queue = deque([supply for supply in supplies if supply in all_ingredients])\n        visited = set()\n        while queue:\n            u = queue.popleft()\n            for v in adj[u]:\n                indegree[v] -= 1\n                if indegree[v] == 0:\n                    queue.append(v)\n                    if v in recipes:\n                        visited.add(v)\n        return visited","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-all-possible-recipes-from-given-supplies","has_notes":false,"flag_type":1}