{"id":310864671,"lang":"c","lang_name":"C","time":"3 years, 6 months","timestamp":1583751331,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/310864671/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"6.8 MB","code":"int minSubArrayLen(int s, int* nums, int numsSize){\n    int ans = numsSize + 1;\n    int sum = 0;\n    int left = 0;\n    int right = 0;\n    while(right < numsSize){\n        sum += nums[right];\n        while(sum >= s){\n            if(right - left + 1 < ans) ans = right - left + 1;\n            sum -= nums[left++];\n        }\n        right++;\n    }\n    if(ans > numsSize) return 0;\n    return ans;\n}\n\n\n// int minSubArrayLen(int s, int* nums, int numsSize){\n//     int ans = numsSize + 1;\n//     int sum = 0;\n//     int left = 0;\n//     int right = 0;\n//     while(right < numsSize){\n//         sum += nums[right];\n//         while(sum >= s){\n//             int currlen = right - left + 1;\n//             if(currlen < ans) ans = currlen;\n//             sum -= nums[left++];\n//         }\n//         right++;\n//     }\n//     if(ans > numsSize) return 0;\n//     return ans;\n// }\n\n// int minSubArrayLen(int s, int* nums, int numsSize){\n//     int* sums = (int*) malloc(sizeof(int) * (numsSize + 1));\n//     sums[0] = 0;\n//     int i = 0;\n//     while(++i < numsSize + 1) sums[i] = sums[i - 1] + nums[i - 1];\n    \n// }\n\n","compare_result":"111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}