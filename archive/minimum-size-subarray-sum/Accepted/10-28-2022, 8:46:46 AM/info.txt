{"id":832141327,"lang":"python3","lang_name":"Python3","time":"10Â months, 2Â weeks","timestamp":1666972006,"status":10,"status_display":"Accepted","runtime":"624 ms","url":"/submissions/detail/832141327/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"27.1 MB","code":"class Solution:\n    def minSubArrayLen(self, target: int, nums: List[int]) -> int:\n        n = len(nums)\n        ans = n + 1\n        l = curr_sum = 0\n        for r in range(n):\n            curr_sum += nums[r]         \n            while curr_sum >= target:\n                ans = min(ans, r - l + 1)\n                curr_sum -= nums[l]\n                l += 1\n        return ans if ans <= n else 0","compare_result":"11111111111111111111","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}