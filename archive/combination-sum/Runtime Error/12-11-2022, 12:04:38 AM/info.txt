{"id":858017157,"lang":"python3","lang_name":"Python3","time":"9Â months","timestamp":1670745878,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/858017157/","is_pending":"Not Pending","title":"Combination Sum","memory":"N/A","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n        n = len(candidates)\n        output = []\n        @cache\n        def backtrack(tmp = [], start = 0, remainder = target):\n            if remainder == 0:\n                output.append(tmp)\n            if remainder > 0:\n                for i in range(start, n):\n                    backtrack(tmp + [candidates[i]], i, remainder - candidates[i])\n        backtrack()\n        return output","compare_result":"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"combination-sum","has_notes":false,"flag_type":1}