{"id":815546266,"lang":"python3","lang_name":"Python3","time":"11Â months, 1Â week","timestamp":1664950532,"status":10,"status_display":"Accepted","runtime":"49 ms","url":"/submissions/detail/815546266/","is_pending":"Not Pending","title":"Combination Sum","memory":"13.9 MB","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n        n = len(candidates)\n        output = []\n        def backtrack(tmp = [], start = 0, remainder = target):\n            if remainder == 0:\n                output.append(tmp)\n            if remainder > 0:\n                for i in range(start, n):\n                    backtrack(tmp + [candidates[i]], i, remainder - candidates[i])\n        backtrack()\n        return output        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}