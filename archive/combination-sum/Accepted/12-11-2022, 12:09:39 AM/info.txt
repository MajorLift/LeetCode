{"id":858018991,"lang":"python3","lang_name":"Python3","time":"9Â months","timestamp":1670746179,"status":10,"status_display":"Accepted","runtime":"59 ms","url":"/submissions/detail/858018991/","is_pending":"Not Pending","title":"Combination Sum","memory":"14 MB","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n        output = []\n        def backtrack(tmp = [], start = 0, remainder = target):\n            if remainder == 0:\n                output.append(tmp)\n            [backtrack(tmp + [candidates[i]], i, remainder - candidates[i]) \\\n                for i in range(start, len(candidates)) if remainder >= candidates[i]]\n        backtrack()\n        return output","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}