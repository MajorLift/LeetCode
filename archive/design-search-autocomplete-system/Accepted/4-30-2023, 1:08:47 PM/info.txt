{"id":942273396,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682885327,"status":10,"status_display":"Accepted","runtime":"621 ms","url":"/submissions/detail/942273396/","is_pending":"Not Pending","title":"Design Search Autocomplete System","memory":"22.2 MB","code":"class AutocompleteSystem:\n\n    def __init__(self, sentences: List[str], times: List[int]):\n        self.n = len(sentences)\n        self.root = TrieNode()\n        self.stream = \"\"\n        for sentence, freq in zip(sentences, times):\n            self.add(sentence, freq)\n\n    def add(self, sentence, hot):\n        curr = self.root\n        for char in sentence:\n            if char not in curr.children:\n                curr.children[char] = TrieNode()\n            curr = curr.children[char]\n        curr.isEnd = True\n        curr.val = sentence\n        curr.rank -= hot\n\n    def search(self, prefix):\n        curr = self.root\n        for char in prefix:\n            if char not in curr.children:\n                return []\n            curr = curr.children[char]\n\n        pq, stack = [], [curr]\n        while stack:\n            curr = stack.pop()\n            if curr.isEnd:\n                heappush(pq, (curr.rank, curr.val))\n            for child in curr.children:\n                stack.append(curr.children[child])\n        return pq\n\n    def input(self, c: str) -> List[str]:\n        results = []\n        if c == \"#\":\n            self.add(self.stream, 1)\n            self.stream = \"\"\n        else:\n            self.stream += c\n            results = self.search(self.stream)\n        \n        output = []\n        for _ in range(3):\n            if not results:\n                break\n            _, sentence = heappop(results)\n            output.append(sentence)\n        return output\n\n\nclass TrieNode:\n    def __init__(self):\n        self.children = dict()\n        self.isEnd = False\n        self.val = None\n        self.rank = 0\n\n# Your AutocompleteSystem object will be instantiated and called as such:\n# obj = AutocompleteSystem(sentences, times)\n# param_1 = obj.input(c)","compare_result":"1111111111111111111111111111111111111111111","title_slug":"design-search-autocomplete-system","has_notes":false,"flag_type":1}