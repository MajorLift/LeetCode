{"id":694167678,"lang":"python3","lang_name":"Python3","time":"1 year, 4 months","timestamp":1651821803,"status":10,"status_display":"Accepted","runtime":"106 ms","url":"/submissions/detail/694167678/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"15.5 MB","code":"class Solution:\n    def __init__(self):\n        self.min = +math.inf\n        self.max = -math.inf\n    \n    def searchRange(self, nums: List[int], target: int) -> List[int]:\n        self.nums = nums\n        self.target = target\n        \n        self.recurse(0, len(nums))\n        return [self.min, self.max] if self.min != +math.inf or self.max != -math.inf else [-1, -1]\n        \n    def recurse(self, lo: int, hi: int) -> None:\n        mid = lo + (hi - lo) // 2\n        \n        if hi - lo == 0 or (hi - lo == 1 and self.nums[mid] != self.target):\n            return\n        \n        if self.nums[mid] == self.target:\n            if mid < self.min:\n                self.min = mid\n                while (self.min > lo and self.nums[self.min - 1] == self.target):\n                    self.min -= 1\n            if mid > self.max:\n                self.max = mid\n                while (self.max < hi - 1 and self.nums[self.max + 1] == self.target):\n                    self.max += 1\n            return\n        \n        if self.nums[mid] < self.target: \n            self.recurse(mid + 1, hi)\n        else:\n            self.recurse(lo, mid)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"flag_type":1}