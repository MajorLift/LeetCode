{"id":694174156,"lang":"python3","lang_name":"Python3","time":"1 year, 4 months","timestamp":1651822680,"status":10,"status_display":"Accepted","runtime":"144 ms","url":"/submissions/detail/694174156/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"15.4 MB","code":"class Solution:\n    def searchRange(self, nums: List[int], target: int) -> List[int]:\n        self.nums = nums\n        self.target = target\n        \n        foundRange = self.binarySearch(0, len(nums))\n        if foundRange is None:\n            return [-1, -1]\n        lo, mid, hi = foundRange\n        min = max = mid\n        \n        while min > lo and nums[min - 1] == target:\n            min -= 1\n        while max < hi - 1 and nums[max + 1] == target:\n            max += 1\n        return [min, max]\n        \n    def binarySearch(self, lo: int, hi: int) -> int or None:        \n        if hi - lo <= 0:\n            return\n        \n        mid = lo + (hi - lo) // 2\n        \n        if self.nums[mid] < self.target: \n            return self.binarySearch(mid + 1, hi)\n        elif self.nums[mid] > self.target:\n            return self.binarySearch(lo, mid)\n        else:\n            return lo, mid, hi\n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"flag_type":1}