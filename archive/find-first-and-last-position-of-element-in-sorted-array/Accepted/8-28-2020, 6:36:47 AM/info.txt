{"id":387577632,"lang":"python3","lang_name":"Python3","time":"3Â years","timestamp":1598621807,"status":10,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/387577632/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"15.3 MB","code":"class Solution:\n    nums = []\n    target = 0\n    \n    def searchRange(self, nums: List[int], target: int) -> List[int]:\n        self.nums = nums\n        self.target = target\n        \n        mid = self.binarySearch(0, len(nums)-1)\n        if mid == -1:\n            return [-1,-1]\n        lo = mid - 1\n        while lo >= 0 and nums[lo] == target:\n            lo -= 1\n        lo += 1\n        hi = mid + 1\n        while hi < len(nums) and nums[hi] == target:\n            hi += 1\n        hi -= 1\n        \n        return [lo, hi]\n        \n    def binarySearch(self, lo, hi):\n        if lo <= hi:        \n            mid = lo + (hi - lo) // 2\n            if self.nums[mid] > self.target:\n                return self.binarySearch(lo, mid - 1)\n            if self.nums[mid] < self.target:\n                return self.binarySearch(mid + 1, hi)\n            if self.nums[mid] == self.target:\n                return mid\n        return -1\n            ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"flag_type":1}