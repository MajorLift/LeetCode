{"id":942235851,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682879293,"status":10,"status_display":"Accepted","runtime":"313 ms","url":"/submissions/detail/942235851/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"25.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def rangeSumBST(self, root: Optional[TreeNode], low: int, high: int) -> int:\n        self.lo, self.hi = low, high\n        return self.dfs(root)\n        \n    def dfs(self, curr):\n        if not curr:\n            return 0\n        return (curr.val \n            if self.lo <= curr.val <= self.hi \n            else 0) \\\n            + sum(list(map(\n                self.dfs, \n                (curr.left, curr.right))))","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst","has_notes":false,"flag_type":1}