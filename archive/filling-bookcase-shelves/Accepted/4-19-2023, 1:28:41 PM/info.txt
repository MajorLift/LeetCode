{"id":936569548,"lang":"python3","lang_name":"Python3","time":"4 months, 3 weeks","timestamp":1681936121,"status":10,"status_display":"Accepted","runtime":"59 ms","url":"/submissions/detail/936569548/","is_pending":"Not Pending","title":"Filling Bookcase Shelves","memory":"15.9 MB","code":"class Solution:\n    def minHeightShelves(self, books: List[List[int]], shelfWidth: int) -> int:\n        widths, heights = map(list, zip(*books))\n        @cache\n        def dp(i, height, width):\n            if width > shelfWidth: \n                return +inf\n            if i >= len(books):\n                return height\n            return min(dp(i + 1, max(height, heights[i]), width + widths[i]), \n                height + dp(i + 1, heights[i], widths[i]))\n        return dp(0, 0, 0)","compare_result":"11111111111111111111","title_slug":"filling-bookcase-shelves","has_notes":false,"flag_type":1}