{"id":812227210,"lang":"python3","lang_name":"Python3","time":"11 months, 2 weeks","timestamp":1664564305,"status":10,"status_display":"Accepted","runtime":"202 ms","url":"/submissions/detail/812227210/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"18.2 MB","code":"class KthLargest:\n\n    def __init__(self, k: int, nums: List[int]):\n        self.minheap, self.maxheap = [], []\n        self.k = k\n        for num in nums:\n            self.add(num)\n\n    def add(self, val: int) -> int:\n        if len(self.minheap) < self.k:\n                heappush(self.minheap, val)\n        else:\n            if self.minheap[0] >= val:\n                heappush(self.maxheap, -val)\n            else:\n                tmp = heappop(self.minheap)\n                heappush(self.maxheap, -tmp)\n                heappush(self.minheap, val)\n        return self.minheap[0]\n\n# Your KthLargest object will be instantiated and called as such:\n# obj = KthLargest(k, nums)\n# param_1 = obj.add(val)","compare_result":"1111111111","title_slug":"kth-largest-element-in-a-stream","has_notes":false,"flag_type":1}