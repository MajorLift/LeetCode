{"id":815525683,"lang":"python3","lang_name":"Python3","time":"11Â months, 1Â week","timestamp":1664948502,"status":10,"status_display":"Accepted","runtime":"283 ms","url":"/submissions/detail/815525683/","is_pending":"Not Pending","title":"Combination Sum II","memory":"14 MB","code":"class Solution:\n    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:\n        n = len(candidates)\n        nums = sorted(candidates)\n        output = []\n        def backtrack(tmp = [], start = 0, remainder = target):\n            if remainder < 0:\n                return\n            if remainder == 0:\n                output.append(tmp)\n            for i in range(start, n):\n                if i > start and nums[i] == nums[i - 1]:\n                    continue\n                backtrack(tmp + [nums[i]], i + 1, remainder - nums[i])\n        backtrack()\n        return output","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum-ii","has_notes":false,"flag_type":1}