{"id":363271623,"lang":"python3","lang_name":"Python3","time":"3Â years, 2Â months","timestamp":1594106658,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/363271623/","is_pending":"Not Pending","title":"3Sum","memory":"N/A","code":"class Solution:\n    def threeSum(self, nums: List[int]) -> List[List[int]]:\n        results = []\n        n = len(nums)\n        if n >= 3:\n            nums.sort()\n            for i in range(n - 2):\n                if i > 0 and nums[i] == nums[i - 1]:\n                    continue\n                if nums[i] + nums[n - 2] + nums[n - 1] < 0:\n                    continue\n                if nums[i] + nums[i + 1] + nums[i + 2] > 0:\n                    break\n            \n                a = nums[i]\n                j = i + 1\n                k = n - 1\n                while j < k:\n                    b, c = nums[j], nums[k]\n                    if b + c == -a: \n                        results.append([a, b, c])\n                        while nums[j] == nums[j + 1]:\n                            j += 1\n                        j += 1\n                        while nums[k] == nums[k - 1]:\n                            k -= 1\n                        k -= 1\n                    elif b + c > -a:\n                        k -= 1\n                    elif b + c < -a:\n                        j += 1\n        return results","compare_result":"1111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"3sum","has_notes":false,"flag_type":1}