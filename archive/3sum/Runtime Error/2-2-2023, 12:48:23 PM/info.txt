{"id":890312918,"lang":"python3","lang_name":"Python3","time":"7Â months, 1Â week","timestamp":1675370903,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/890312918/","is_pending":"Not Pending","title":"3Sum","memory":"N/A","code":"class Solution:\n    def threeSum(self, nums: List[int]) -> List[List[int]]:\n        pos, neg, zero = set(), set(), set()\n        for i, num in enumerate(nums):\n            (pos if num > 0 else neg if num < 0 else zero).add(i)\n\n        output = []\n        for i, j in combinations(pos, 2):\n            complement = -(nums[i] + nums[j])\n            if any(nums[idx] == complement for idx in neg):\n                output.append((nums[neg[complement]], nums[i], nums[j]))\n        for i, j in combinations(neg, 2):\n            complement = -(nums[i] + nums[j])\n            if complement in pos:\n                output.append((nums[i], nums[j], nums[pos[complement]]))\n        if len(zero) >= 3:\n            output.append((0, 0, 0))\n\n        return output","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"3sum","has_notes":false,"flag_type":1}