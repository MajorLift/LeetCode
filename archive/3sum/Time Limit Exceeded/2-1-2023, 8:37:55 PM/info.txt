{"id":889827734,"lang":"python3","lang_name":"Python3","time":"7 months, 1 week","timestamp":1675312675,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/889827734/","is_pending":"Not Pending","title":"3Sum","memory":"N/A","code":"class Solution:\n    def threeSum(self, nums: List[int]) -> List[List[int]]:\n        nums.sort()\n        output = set()\n        for k in range(len(nums) - 1, 1, -1):\n            for i, j in self.twoSumSorted(nums[:k], -nums[k]):\n                output.add((nums[i], nums[j], nums[k]))\n        return output\n        \n    def twoSumSorted(self, nums, target):\n        output = []\n        for right in range(len(nums) - 1, 0, -1):\n            left = bisect_left(nums[:right], target - nums[right])\n            if left < right and nums[left] + nums[right] == target:\n                output.append([left, right])\n        return output","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000","title_slug":"3sum","has_notes":false,"flag_type":1}