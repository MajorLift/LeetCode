{"id":889943160,"lang":"python3","lang_name":"Python3","time":"7Â months, 1Â week","timestamp":1675327346,"status":10,"status_display":"Accepted","runtime":"7644 ms","url":"/submissions/detail/889943160/","is_pending":"Not Pending","title":"3Sum","memory":"18.3 MB","code":"class Solution:\n    def threeSum(self, nums: List[int]) -> List[List[int]]:\n        output = set()\n        hashmap = {num: i for i, num in enumerate(nums)}\n        for k in range(len(nums) - 2):\n            for i, j in self.twoSum(nums, -nums[k], k + 1):\n                output.add(tuple(sorted([nums[k], nums[i], nums[j]])))\n        return output\n        \n    def twoSum(self, nums, target, start):\n        hashmap = {num: i for i, num in enumerate(nums)}\n        output = []\n        for i in range(start, len(nums)):\n            if target - nums[i] in hashmap and hashmap[target - nums[i]] > i:\n                output.append((i, hashmap[target - nums[i]]))\n        return output","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum","has_notes":false,"flag_type":1}