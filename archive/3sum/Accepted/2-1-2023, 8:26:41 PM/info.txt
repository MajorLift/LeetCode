{"id":889822759,"lang":"python3","lang_name":"Python3","time":"7Â months, 1Â week","timestamp":1675312001,"status":10,"status_display":"Accepted","runtime":"7881 ms","url":"/submissions/detail/889822759/","is_pending":"Not Pending","title":"3Sum","memory":"18.6 MB","code":"class Solution:\n    def threeSum(self, nums: List[int]) -> List[List[int]]:\n        n = len(nums)\n        output = set()\n        for k in range(n - 1, 1, -1):\n            res = self.twoSum(nums[:k], -nums[k])\n            for i, j in res:\n                output.add(tuple(sorted([nums[i], nums[j], nums[k]])))\n        return output\n    \n    def twoSum(self, nums, target):\n        hashmap = {e: i for i,e in enumerate(nums)}\n        output = set()\n        for i in range(len(nums)):\n            complement = target - nums[i]\n            if complement in hashmap and hashmap[complement] != i:\n                output.add(tuple(sorted([i, hashmap[complement]])))\n        return output","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum","has_notes":false,"flag_type":1}