{"id":890326084,"lang":"python3","lang_name":"Python3","time":"7 months, 1 week","timestamp":1675372972,"status":10,"status_display":"Accepted","runtime":"5061 ms","url":"/submissions/detail/890326084/","is_pending":"Not Pending","title":"3Sum","memory":"17.9 MB","code":"class Solution:\n    def threeSum(self, nums: List[int]) -> List[List[int]]:\n        nums.sort()\n        output = set()\n        for k in range(len(nums) - 1, bisect_left(nums, 0), -1):\n            for i, j in self.twoSumSorted(nums[:k], -nums[k]):\n                output.add((nums[i], nums[j], nums[k]))\n        for k in range(bisect_left(nums, 0)):\n            for i, j in self.twoSumSorted(nums[k+1:], -nums[k]):\n                output.add((nums[k], nums[i + (k + 1)], nums[j + (k + 1)]))\n        return output\n        \n    def twoSumSorted(self, nums, target):\n        left, right = 0, len(nums) - 1\n        output = []\n        while left < right:\n            if nums[left] + nums[right] == target:\n                output.append((left, right))\n                left, right = left + 1, right - 1\n            while left < len(nums) - 1 and nums[left] + nums[right] < target:\n                left = max(left + 1, \n                    bisect_left(nums, target - nums[right], \n                        lo=left + 1, hi=right - 1))\n            while right > 0 and nums[left] + nums[right] > target:\n                right = min(right - 1, \n                    bisect_right(nums, target - nums[left], \n                        lo=left + 1, hi=right - 1))\n        return output","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum","has_notes":false,"flag_type":1}