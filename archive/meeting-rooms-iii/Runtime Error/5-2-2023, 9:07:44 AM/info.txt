{"id":943314263,"lang":"python3","lang_name":"Python3","time":"4 months, 1 week","timestamp":1683043664,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/943314263/","is_pending":"Not Pending","title":"Meeting Rooms III","memory":"N/A","code":"class Solution:\n    def mostBooked(self, n: int, meetings: List[List[int]]) -> int:\n        avail, busy, cnt = list(range(n)), [], [0] * n\n\n        for start, end in sorted(meetings, key=lambda x:x[0]):\n            while busy and busy[0][0] <= start:\n                heappop(busy)\n\n            if avail:\n                room_id = heappop(avail)\n                heappush(busy, (end, room_id))\n                cnt[room_id] += 1\n            \n            else:\n                nxt_end, nxt_id = heappop(busy)\n                heappush(busy, (nxt_end + (end - start), nxt_id))\n                cnt[nxt_id] += 1\n\n        return cnt.index(max(cnt))\n","compare_result":"1111100000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"meeting-rooms-iii","has_notes":false,"flag_type":1}