{"id":884561926,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674586643,"status":10,"status_display":"Accepted","runtime":"4418 ms","url":"/submissions/detail/884561926/","is_pending":"Not Pending","title":"Meeting Rooms III","memory":"60.4 MB","code":"class Solution:\n    def mostBooked(self, n: int, meetings: List[List[int]]) -> int:\n        meetings.sort(key=lambda x: x[0])\n        rooms = []\n        empty = [(i, 0) for i in range(n)]\n        for start, end in meetings:\n            while rooms and rooms[0][0] <= start:\n                room_end, room_id, room_cnt = heappop(rooms)\n                heappush(empty, (room_id, room_cnt))\n            if empty:\n                empty_id, empty_cnt = heappop(empty)\n                heappush(rooms, (end, empty_id, empty_cnt + 1))\n            else:\n                room_end, room_id, room_cnt = heappop(rooms)\n                heappush(rooms, (room_end + (end - start), room_id, room_cnt + 1))\n        return sorted([(room_id, room_cnt) \\\n            for _, room_id, room_cnt in rooms] + empty, \\\n            key=lambda x: (-x[1], x[0]))[0][0]","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-iii","has_notes":false,"flag_type":1}