{"id":884555660,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674585994,"status":10,"status_display":"Accepted","runtime":"2925 ms","url":"/submissions/detail/884555660/","is_pending":"Not Pending","title":"Meeting Rooms III","memory":"60.4 MB","code":"class Solution:\n    def mostBooked(self, n: int, meetings: List[List[int]]) -> int:\n        meetings.sort(key=lambda x: x[0])\n        cnt = [0 for i in range(n)]\n        rooms = []\n        empty = [i for i in range(n)]\n        for start, end in meetings:\n            while rooms and rooms[0][0] <= start:\n                room_end, room_id = heappop(rooms)\n                heappush(empty, room_id)\n            if empty:\n                empty_id = heappop(empty)\n                heappush(rooms, (end, empty_id))\n                cnt[empty_id] += 1\n            else:\n                room_end, room_id = heappop(rooms)\n                heappush(rooms, (room_end + end - start, room_id))\n                cnt[room_id] += 1\n        return cnt.index(max(cnt))","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-iii","has_notes":false,"flag_type":1}