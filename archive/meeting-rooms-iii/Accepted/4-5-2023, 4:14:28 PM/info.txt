{"id":928746971,"lang":"python3","lang_name":"Python3","time":"5 months, 1 week","timestamp":1680736468,"status":10,"status_display":"Accepted","runtime":"1419 ms","url":"/submissions/detail/928746971/","is_pending":"Not Pending","title":"Meeting Rooms III","memory":"60.3 MB","code":"class Solution:\n    def mostBooked(self, n: int, meetings: List[List[int]]) -> int:\n        busy, idle, cnt = [], [i for i in range(n)], [0 for i in range(n)]\n        for start, end in sorted(meetings, key=lambda x: x[0]):\n            while busy and busy[0][0] <= start:\n                room_end, room_id = heappop(busy)\n                heappush(idle, room_id)\n            if idle:\n                room_id = heappop(idle)\n                heappush(busy, (end, room_id))\n            else:\n                room_end, room_id = heappop(busy)\n                heappush(busy, (room_end + end - start, room_id))\n            cnt[room_id] += 1\n        return cnt.index(max(cnt))","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-iii","has_notes":false,"flag_type":1}