{"id":943317008,"lang":"python3","lang_name":"Python3","time":"4 months, 1 week","timestamp":1683043956,"status":10,"status_display":"Accepted","runtime":"1488 ms","url":"/submissions/detail/943317008/","is_pending":"Not Pending","title":"Meeting Rooms III","memory":"62.8 MB","code":"class Solution:\n    def mostBooked(self, n: int, meetings: List[List[int]]) -> int:\n        idle, busy, cnt = list(range(n)), [], [0] * n\n\n        for start, end in sorted(meetings, key=lambda x:x[0]):\n            while busy and busy[0][0] <= start:\n                heappush(idle, heappop(busy)[1])\n\n            if idle:\n                room_id = heappop(idle)\n                heappush(busy, (end, room_id))\n            \n            elif busy:\n                nxt_end, room_id = heappop(busy)\n                heappush(busy, (nxt_end + (end - start), room_id))\n            \n            cnt[room_id] += 1\n\n        return cnt.index(max(cnt))\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-iii","has_notes":false,"flag_type":1}