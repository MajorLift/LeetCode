{"id":937688462,"lang":"python3","lang_name":"Python3","time":"4Â months, 3Â weeks","timestamp":1682131858,"status":10,"status_display":"Accepted","runtime":"1465 ms","url":"/submissions/detail/937688462/","is_pending":"Not Pending","title":"Meeting Rooms III","memory":"60.3 MB","code":"class Solution:\n    def mostBooked(self, n: int, meetings: List[List[int]]) -> int:\n        avail = list(range(n))\n        used = []\n        cnt = [0] * n\n        for start, end in sorted(meetings, key=lambda x: x[0]):\n            while used and used[0][0] <= start:\n                heappush(avail, heappop(used)[1])\n            if avail:\n                room = heappop(avail)\n                heappush(used, (end, room))\n            else:\n                next_end, room = heappop(used)\n                heappush(used, (next_end + (end - start), room))\n            cnt[room] += 1\n        return cnt.index(max(cnt))","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"meeting-rooms-iii","has_notes":false,"flag_type":1}