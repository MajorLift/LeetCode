{"id":889047614,"lang":"python3","lang_name":"Python3","time":"7 months, 1 week","timestamp":1675204776,"status":10,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/889047614/","is_pending":"Not Pending","title":"House Robber III","memory":"17.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def rob(self, root: Optional[TreeNode]) -> int:\n        @cache\n        def dp(node: Optional[TreeNode]) -> int:\n            if not node:\n                return 0\n            subchilds = []\n            if node.left:\n                subchilds += [node.left.left, node.left.right]\n            if node.right:\n                subchilds += [node.right.left, node.right.right]\n            return max(node.val + sum([dp(v) for v in subchilds]), dp(node.left) + dp(node.right))\n        return dp(root)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber-iii","has_notes":false,"flag_type":1}