{"id":941817812,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682814618,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/941817812/","is_pending":"Not Pending","title":"Number of Ways to Build Sturdy Brick Wall","memory":"N/A","code":"class Solution:\n    def buildWall(self, height: int, width: int, bricks: List[int]) -> int:\n        MOD = 10 ** 9 + 7\n        breaks = set()\n        def backtrack(path=[], rem=width):\n            if rem == 0: \n                breaks.add(tuple(accumulate(path, func=operator.add))[:-1])\n                return\n            for brick in bricks:\n                if rem - brick >= 0:\n                    path.append(brick)\n                    backtrack(path, rem - brick)\n                    path.pop()\n        backtrack()\n\n        adj = defaultdict(set)\n        for u, v in combinations(breaks, 2):\n            if not set(u) & set(v):\n                adj[u].add(v)\n                adj[v].add(u)\n\n        @cache\n        def dp(wall, curr):\n            if wall == height:\n                return 1\n            return sum([dp(wall + 1, v) for v in adj[curr]])\n        \n        return sum([dp(1, b) for b in breaks]) % MOD\n        ","compare_result":"1111111111010001011111010011011110000011100111001000110011101110010001010010100010111100010100110010100000000110","title_slug":"number-of-ways-to-build-sturdy-brick-wall","has_notes":false,"flag_type":1}