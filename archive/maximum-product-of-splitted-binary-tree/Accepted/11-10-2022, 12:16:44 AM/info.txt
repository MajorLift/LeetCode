{"id":840623715,"lang":"python3","lang_name":"Python3","time":"10Â months","timestamp":1668068204,"status":10,"status_display":"Accepted","runtime":"330 ms","url":"/submissions/detail/840623715/","is_pending":"Not Pending","title":"Maximum Product of Splitted Binary Tree","memory":"76.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def maxProduct(self, root: Optional[TreeNode]) -> int:\n        MOD = 10 ** 9 + 7\n\n        sums = []\n        def sum_tree(node):\n            if not node:\n                return 0\n            curr = node.val + sum_tree(node.left) + sum_tree(node.right)\n            sums.append(curr)\n            return curr\n\n        total = sum_tree(root)\n        ans = 0\n        for e in sums:\n            ans = max(ans, e * (total - e))\n        return ans % MOD\n","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-of-splitted-binary-tree","has_notes":false,"flag_type":1}