{"id":821330444,"lang":"python3","lang_name":"Python3","time":"11Â months","timestamp":1665630843,"status":10,"status_display":"Accepted","runtime":"62 ms","url":"/submissions/detail/821330444/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"14.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nfrom collections import deque\n\nclass Solution:\n    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:\n        queue = deque([(root, 0)])\n        output = []\n        while queue:\n            curr, level = queue.popleft()\n            if not curr:\n                break\n            if level == len(output):\n                output.append([])\n            output[-1].append(curr.val)\n            if curr.left:\n                queue.append((curr.left, level + 1))\n            if curr.right:\n                queue.append((curr.right, level + 1))\n        return output","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}