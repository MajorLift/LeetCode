{"id":856292819,"lang":"python3","lang_name":"Python3","time":"9 months, 1 week","timestamp":1670444809,"status":10,"status_display":"Accepted","runtime":"392 ms","url":"/submissions/detail/856292819/","is_pending":"Not Pending","title":"Task Scheduler","memory":"14.4 MB","code":"class Solution:\n    def leastInterval(self, tasks: List[str], n: int) -> int:\n        freqs = collections.Counter(tasks)\n        maxFreq = max(freqs.values())\n\n        pq = [(-freq, task) for task, freq in freqs.items()]\n        heapq.heapify(pq)\n        heapq.heappop(pq)\n        idle = (maxFreq - 1) * n\n        while pq:\n            freq, _ = heapq.heappop(pq)\n            idle -= min(maxFreq - 1, -freq)\n        return len(tasks) + (idle if idle > 0 else 0)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"task-scheduler","has_notes":false,"flag_type":1}