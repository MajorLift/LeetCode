{"id":819120769,"lang":"python3","lang_name":"Python3","time":"11 months, 1 week","timestamp":1665379155,"status":10,"status_display":"Accepted","runtime":"58 ms","url":"/submissions/detail/819120769/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"13.9 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def invertTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:\n        if root:\n            queue = deque([root])\n            while queue:\n                curr = queue.popleft()\n                curr.left, curr.right = curr.right, curr.left\n                if curr.left:\n                    queue.append(curr.left)\n                if curr.right:\n                    queue.append(curr.right)\n        return root\n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}