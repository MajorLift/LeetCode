{"id":962462932,"lang":"python3","lang_name":"Python3","time":"3 months, 1 week","timestamp":1685725028,"status":10,"status_display":"Accepted","runtime":"3494 ms","url":"/submissions/detail/962462932/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"18.2 MB","code":"class Solution:\n    def lengthOfLIS(self, nums: List[int]) -> int:\n        @cache\n        def dp(i):\n            local_max = 0\n            for j in range(i):\n                if nums[j] < nums[i]:\n                    local_max = max(local_max, dp(j) + 1)\n            return max(local_max, 1)\n        return max(dp(i) for i in range(len(nums) - 1, -1, -1))","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":true,"flag_type":1}