{"id":899434829,"lang":"python3","lang_name":"Python3","time":"6 months, 3 weeks","timestamp":1676592611,"status":10,"status_display":"Accepted","runtime":"4006 ms","url":"/submissions/detail/899434829/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"16.2 MB","code":"class Solution:\n    def lengthOfLIS(self, nums: List[int]) -> int:\n        n = len(nums)\n        @cache\n        def dp(i):\n            local_max = 0\n            for j in range(i):\n                if nums[i] > nums[j]:\n                    local_max = max(local_max, dp(j) + 1)\n            return local_max if local_max > 0 else 1\n        return max(dp(i) for i in range(n))","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}