{"id":898903292,"lang":"python3","lang_name":"Python3","time":"6 months, 4 weeks","timestamp":1676521627,"status":10,"status_display":"Accepted","runtime":"3745 ms","url":"/submissions/detail/898903292/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"16.3 MB","code":"class Solution:\n    def lengthOfLIS(self, nums: List[int]) -> int:\n        n = len(nums)\n        @cache\n        def dp(i):\n            curr_max = -math.inf\n            for j in range(i):\n                if nums[i] > nums[j]:\n                    curr_max = max(curr_max, dp(j) + 1)\n            return curr_max if curr_max > -math.inf else 1\n        return max(dp(i) for i in range(n))","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}