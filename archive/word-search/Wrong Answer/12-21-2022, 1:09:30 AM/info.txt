{"id":863142178,"lang":"python3","lang_name":"Python3","time":"8 months, 3 weeks","timestamp":1671613770,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/863142178/","is_pending":"Not Pending","title":"Word Search","memory":"N/A","code":"class Solution:\n    def exist(self, board: List[List[str]], word: str) -> bool:\n        m, n = len(board), len(board[0])\n        k = len(word)\n        \n        def backtrack(curr, idx):\n            i, j = curr\n            if not (0 <= i < m and 0 <= j < n) or board[i][j] != word[idx]:\n                return False\n            if idx == k - 1:\n                return True\n            return any([backtrack(tuple(map(sum, zip(curr, offset))), idx + 1) for offset in ((-1, 0), (1, 0), (0, -1), (0, 1))])\n\n        return m * n >= k and any([backtrack((i, j), 0) for i in range(m) for j in range(n) if board[i][j] == word[0]])","compare_result":"1101111111111111111111111110111100000000000000000000000000000000000000000000000000000","title_slug":"word-search","has_notes":false,"flag_type":1}