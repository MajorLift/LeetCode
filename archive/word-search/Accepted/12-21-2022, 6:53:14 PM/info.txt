{"id":863534614,"lang":"javascript","lang_name":"JavaScript","time":"8 months, 3 weeks","timestamp":1671677594,"status":10,"status_display":"Accepted","runtime":"1414 ms","url":"/submissions/detail/863534614/","is_pending":"Not Pending","title":"Word Search","memory":"50.7 MB","code":"/**\n * @param {character[][]} board\n * @param {string} word\n * @return {boolean}\n */\nvar exist = function(board, word) {\n    const [m, n] = [board.length, board[0].length]\n    const wordCharsCount = word.split('').reduce((acc, curr) => {\n        acc[curr] = (acc[curr] || 0) + 1\n        return acc\n    }, {})\n    const wordCharsSet = new Set(Object.keys(wordCharsCount))\n    const charCoordsMap = board.reduce((acc, row, i) => {\n        row.forEach((char, j) => {\n            if (wordCharsSet.has(char)) acc[char] = (acc[char] || new Set()).add(JSON.stringify([i, j]))\n        })\n        return acc\n    }, {})\n\n    if (m * n < word.length\n        || wordCharsSet.size != Object.keys(charCoordsMap).length\n        || ![...wordCharsSet].every((k) => (wordCharsCount[k] <= charCoordsMap[k].size))) \n        return false\n\n    if (charCoordsMap[word[word.length - 1]] < charCoordsMap[word[0]]) {\n        word = word.reverse()\n    }\n\n    function backtrack([x, y], idx) {\n        if (idx === word.length - 1) return true\n        charCoordsMap[word[idx]].delete(JSON.stringify([x, y]))\n        for (const [i, j] of [[x - 1, y], [x + 1, y], [x, y - 1], [x, y + 1]]) {\n            if (!charCoordsMap[word[idx + 1]].has(JSON.stringify([i, j]))) continue\n            if (backtrack([i, j], idx + 1)) return true\n        }\n        charCoordsMap[word[idx]].add(JSON.stringify([x, y]))\n        return false\n    }\n\n    for (let i = 0; i < m; ++i) {\n        for (let j = 0; j < n; ++j) {\n            if (board[i][j] == word[0]) {\n                if (backtrack([i, j], 0)) return true\n            }\n        }\n    }\n    return false\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-search","has_notes":false,"flag_type":1}