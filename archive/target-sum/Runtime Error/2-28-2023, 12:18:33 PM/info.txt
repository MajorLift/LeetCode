{"id":906718182,"lang":"python3","lang_name":"Python3","time":"6 months, 2 weeks","timestamp":1677615513,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/906718182/","is_pending":"Not Pending","title":"Target Sum","memory":"N/A","code":"class Solution:\n    def findTargetSumWays(self, nums: List[int], target: int) -> int:\n        n, total = len(nums), sum(nums)\n        memo = [([0] * (2 * total + 1)) for _ in range(n)]\n        memo[0][total + nums[0]] = 1\n        memo[0][total - nums[0]] += 1\n        for i in range(1, n):\n            for acc in range(-total, total + 1):\n                if memo[i - 1][acc + total] > 0:\n                    memo[i][acc + total + nums[i]] += memo[i - 1][acc + total]\n                    memo[i][acc + total - nums[i]] += memo[i - 1][acc + total]\n        return memo[n - 1][target + total]","compare_result":"11000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"target-sum","has_notes":false,"flag_type":1}