{"id":906721079,"lang":"python3","lang_name":"Python3","time":"6 months, 2 weeks","timestamp":1677615923,"status":10,"status_display":"Accepted","runtime":"301 ms","url":"/submissions/detail/906721079/","is_pending":"Not Pending","title":"Target Sum","memory":"14 MB","code":"class Solution:\n    def findTargetSumWays(self, nums: List[int], target: int) -> int:\n        n, total = len(nums), sum(nums)\n        prev = [0] * (2 * total + 1)\n        prev[total + nums[0]] = 1\n        prev[total - nums[0]] += 1\n        for i in range(1, n):\n            curr = [0] * (2 * total + 1)\n            for acc in range(-total, total + 1):\n                if prev[acc + total] > 0:\n                    curr[acc + total + nums[i]] += prev[acc + total]\n                    curr[acc + total - nums[i]] += prev[acc + total]\n            prev = curr\n        return prev[target + total] if abs(target) <= total else 0","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"target-sum","has_notes":true,"flag_type":1}