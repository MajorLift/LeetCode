{"id":719863678,"lang":"python3","lang_name":"Python3","time":"1 year, 3 months","timestamp":1654972500,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/719863678/","is_pending":"Not Pending","title":"Network Delay Time","memory":"N/A","code":"class Solution:\n    def networkDelayTime(self, times: List[List[int]], n: int, k: int) -> int:\n        times = [(u - 1, v - 1, w) for u, v, w in times]\n        k -= 1\n        # deserialize input into graph\n        adj_mat = [[0 for j in range(n)] for i in range(n)]\n        for source, target, weight in times:\n            adj_mat[source][target] = weight\n        print(adj_mat)\n        \n        dist = [float('inf') if i != k else 0 for i in range(n)]\n        visited = [False for i in range(n)]\n        pq = [(0, k)]\n\n        while pq:\n            dist_u, u = heapq.heappop(pq)\n            print(u)\n            visited[u] = True\n            for v, dist_v in enumerate(adj_mat[u]):\n                if dist_v == 0:\n                    continue\n                alt_dist = dist_u + dist_v\n                if alt_dist < dist[v]:\n                    dist[v] = alt_dist\n                    heapq.heappush(pq, (alt_dist, v))\n        print(dist, pq)\n        \n        if max(dist) == float('inf'):\n            return -1\n        return max(dist)","compare_result":"1111111111110111111111101011110000100011000000000000","title_slug":"network-delay-time","has_notes":false,"flag_type":1}