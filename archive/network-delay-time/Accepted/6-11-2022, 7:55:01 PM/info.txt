{"id":720103220,"lang":"python3","lang_name":"Python3","time":"1 year, 3 months","timestamp":1655002501,"status":10,"status_display":"Accepted","runtime":"908 ms","url":"/submissions/detail/720103220/","is_pending":"Not Pending","title":"Network Delay Time","memory":"16.2 MB","code":"class Solution:\n    def networkDelayTime(self, times: List[List[int]], n: int, k: int) -> int:\n        # convert vertex labels to zero-index\n        times = [(u - 1, v - 1, w) for u, v, w in times]\n        k -= 1\n        \n        # deserialize input into graph\n        adj_list = [[] for _ in range(n)]\n        for source, target, weight in times:\n            adj_list[source].append((weight, target))\n        \n        dist = [math.inf if i != k else 0 for i in range(n)]\n        pq = [(0, k)]\n\n        while pq:\n            dist_v, v = heapq.heappop(pq)\n            for weight_u, u in adj_list[v]:\n                if dist[v] + weight_u < dist[u]:\n                    dist[u] = dist[v] + weight_u\n                    heapq.heappush(pq, (dist[u], u))\n        \n        return max(dist) if all(e < math.inf for e in dist) else -1","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"network-delay-time","has_notes":false,"flag_type":1}