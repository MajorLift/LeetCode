{"id":857284385,"lang":"python3","lang_name":"Python3","time":"9Â months","timestamp":1670616215,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/857284385/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"N/A","code":"class MedianFinder:\n\n    def __init__(self):\n        self.maxheap, self.minheap = [], []\n\n    def addNum(self, num: int) -> None:\n        if len(self.minheap) > len(self.maxheap):\n            heapq.heappush(self.maxheap, -num)\n        else:\n            heapq.heappush(self.minheap, num)\n\n    def findMedian(self) -> float:\n        if len(self.minheap) > len(self.maxheap):\n            return -self.maxheap[0]\n        elif len(self.minheap) == len(self.maxheap):\n            return (self.minheap[0] - self.maxheap[0]) / 2\n\n\n# Your MedianFinder object will be instantiated and called as such:\n# obj = MedianFinder()\n# obj.addNum(num)\n# param_2 = obj.findMedian()","compare_result":"100000000000000000000","title_slug":"find-median-from-data-stream","has_notes":false,"flag_type":1}