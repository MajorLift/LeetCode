{"id":716189385,"lang":"python3","lang_name":"Python3","time":"1 year, 3 months","timestamp":1654571873,"status":10,"status_display":"Accepted","runtime":"9003 ms","url":"/submissions/detail/716189385/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"35.9 MB","code":"class MedianFinder:\n    \n    def __init__(self):\n        self.lo = []\n        self.hi = []\n\n    def addNum(self, num: int) -> None:\n        top = -heapq.heappushpop(self.lo, -num)\n        heapq.heappush(self.hi, top)\n        if len(self.hi) > len(self.lo):\n            bottom = -heapq.heappop(self.hi)\n            heapq.heappush(self.lo, bottom)\n\n    def findMedian(self) -> float:\n        return -heapq.nsmallest(1, self.lo).pop() if len(self.lo) > len(self.hi) \\\n            else (-heapq.nsmallest(1, self.lo).pop() + heapq.nsmallest(1, self.hi).pop()) / 2\n\n\n# Your MedianFinder object will be instantiated and called as such:\n# obj = MedianFinder()\n# obj.addNum(num)\n# param_2 = obj.findMedian()","compare_result":"111111111111111111111","title_slug":"find-median-from-data-stream","has_notes":false,"flag_type":1}