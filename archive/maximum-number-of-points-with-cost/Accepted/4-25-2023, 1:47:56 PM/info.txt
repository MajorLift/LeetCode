{"id":939720713,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682455676,"status":10,"status_display":"Accepted","runtime":"2117 ms","url":"/submissions/detail/939720713/","is_pending":"Not Pending","title":"Maximum Number of Points with Cost","memory":"47.6 MB","code":"class Solution:\n    def maxPoints(self, points: List[List[int]]) -> int:\n        m, n = map(len, (points, points[0]))\n        if m == 1: return max(points[0])\n        if n == 1: return sum(row[0] for row in points)\n        \n        def left(row):\n            memo = [row[0]] + [0] * (n - 1)\n            for i in range(1, n):\n                memo[i] = max(memo[i - 1] - 1, row[i])\n            return memo\n\n        def right(row):\n            memo = [0] * (n - 1) + [row[-1]]\n            for i in range(n - 2, -1, -1):\n                memo[i] = max(memo[i + 1] - 1, row[i])\n            return memo\n\n        prev = points[0]\n        for i in range(1, m):\n            l, r, curr = left(prev), right(prev), [0] * n\n            for j in range(n):\n                curr[j] = points[i][j] + max(l[j], r[j])\n            prev = curr[:]\n        return max(prev)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-points-with-cost","has_notes":false,"flag_type":1}