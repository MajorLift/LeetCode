{"id":936444598,"lang":"python3","lang_name":"Python3","time":"4 months, 3 weeks","timestamp":1681920795,"status":10,"status_display":"Accepted","runtime":"345 ms","url":"/submissions/detail/936444598/","is_pending":"Not Pending","title":"Multiply Strings","memory":"14.2 MB","code":"class Solution:\n    def multiply(self, num1: str, num2: str) -> str:\n        shorter, longer = sorted((num1, num2), key=len)\n        acc = '0'\n        for i, digit in enumerate(reversed(shorter)):\n            acc = self.add(acc, self.padRight(\n                self.multiplyByDigit(longer, digit), '0', i\n            ))\n        return acc\n\n    def multiplyByDigit(self, multiplicand: str, multiplier: str) -> str:\n        if multiplier == '0':\n            return '0'\n        output = deque()\n        multiplier = self.aToI(multiplier)\n        carry = 0\n        for digit in map(self.aToI, reversed(multiplicand)):\n            mul = digit * multiplier + carry\n            carry = mul // 10\n            output.appendleft(mul % 10)\n        if carry > 0:\n            output.appendleft(carry)\n        return ''.join(map(str, output))\n\n    def padLeft(self, n: str, digit: str, k: int) -> str:\n        return ''.join([digit] * k + list(n))\n\n    def padRight(self, n: str, digit: str, k: int) -> str:\n        return ''.join(list(n) + [digit] * k)\n    \n    def add(self, num1: str, num2: str) -> str:\n        shorter, longer = sorted((num1, num2), key=len)\n        shorter = self.padLeft(shorter, '0', len(longer) - len(shorter))\n        output = deque()\n        carry = 0\n        for a, b in zip(*map(reversed, (shorter, longer))):\n            sum_ = sum(map(self.aToI, (a, b))) + carry\n            carry = sum_ // 10\n            output.appendleft(sum_ % 10)\n        if carry == 1:            \n            output.appendleft('1')\n        return ''.join(map(str, output))\n\n    def aToI(self, digit: str) -> int:\n        return ord(digit) - ord('0')","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"multiply-strings","has_notes":true,"flag_type":1}