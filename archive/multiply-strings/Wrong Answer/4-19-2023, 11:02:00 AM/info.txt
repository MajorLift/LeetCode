{"id":936503333,"lang":"python3","lang_name":"Python3","time":"4 months, 3 weeks","timestamp":1681927320,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/936503333/","is_pending":"Not Pending","title":"Multiply Strings","memory":"N/A","code":"class Solution:\n    def multiply(self, num1: str, num2: str) -> str:\n        if num1 == '0' or num2 == '0':\n            return '0'\n        n, m = len(num1), len(num2)\n        output = [0] * (n + m)\n        for i, j in product(range(n - 1, -1, -1), range(m - 1, -1, -1)):\n            mul = reduce(operator.mul, map(int, (num1[i], num2[j]))) + output[i + j]\n            output[i + j] = mul % 10\n            output[i + j - 1] += mul // 10\n        output.pop()\n        while output[0] == 0:\n            output.pop(0)\n        return ''.join(map(str, output))\n        \n        # n, m = len(n1), len(n2)\n        # ans = [0] * (n + m)\n        # for i in range(n):\n        #     for j in range(m):\n        #         pos = i + j\n        #         curr = n1[i] * n2[j] + ans[pos]\n        #         ans[pos] = curr % 10\n        #         ans[pos + 1] += curr // 10\n        # while ans[-1] == 0:\n        #     ans.pop()\n        # return \"\".join([str(num) for num in ans[::-1]])","compare_result":"11111000010011010101101011000010001000010000110000010100100000100000000000011000010001000101100001001000100000100001000000000010100000110000100000001000000100010000010000100000000011001100000000000000000010100101000000100000100000000100100000001000000000000000010000000000000000000000010001000000000000000100000","title_slug":"multiply-strings","has_notes":false,"flag_type":1}