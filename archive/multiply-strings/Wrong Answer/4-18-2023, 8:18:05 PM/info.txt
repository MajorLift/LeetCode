{"id":936134199,"lang":"python3","lang_name":"Python3","time":"4 months, 3 weeks","timestamp":1681874285,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/936134199/","is_pending":"Not Pending","title":"Multiply Strings","memory":"N/A","code":"class Solution:\n    def multiply(self, num1: str, num2: str) -> str:\n        acc = '0'\n        for i, digit in enumerate(reversed(num2)):\n            acc = self.add(acc, self.rightShift(self.multiplyByDigit(num1, digit), i))\n        return acc\n\n    def add(self, num1: str, num2: str) -> str:\n        shorter, longer = map(list, sorted([num1, num2], key=len))\n        shorter = ['0'] * (len(longer) - len(shorter)) + shorter\n        output = deque()\n        carry = 0\n        for a, b in zip(*map(reversed, [shorter, longer])):\n            sum_ = sum(map(self.aToI, (a, b))) + carry\n            carry = sum_ // 10\n            output.appendleft(sum_ % 10)\n        if carry == 1:            \n            output.appendleft('1')\n        return ''.join(map(str, output))\n\n    def rightShift(self, n: str, k: int) -> str:\n        return ''.join(list(n) + ['0'] * k)\n        \n    def multiplyByDigit(self, multiplicand: str, multiplier: str) -> str:\n        output = deque()\n        multiplier = self.aToI(multiplier)\n        carry = 0\n        for digit in map(self.aToI, reversed(multiplicand)):\n            mul = digit * multiplier + carry\n            carry = mul // 10\n            output.appendleft(mul % 10)\n        if carry == 1:\n            output.appendleft(1)\n        return ''.join(map(str, output))\n\n    def aToI(self, digit: str) -> int:\n        return ord(digit) - ord('0')","compare_result":"11111000001011010101001010000011000000011100100000010100001000101000000000010000000000000100101000101010100001110001000001100000000001100000000000001000000101000000010010100001000101000000010000000000000010000000000000100000100000110000010010000000000000000000000010000000000000001000001001001000000000000000000","title_slug":"multiply-strings","has_notes":false,"flag_type":1}