{"id":845011922,"lang":"python3","lang_name":"Python3","time":"9 months, 4 weeks","timestamp":1668664491,"status":10,"status_display":"Accepted","runtime":"154 ms","url":"/submissions/detail/845011922/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"15.3 MB","code":"class Solution:\n    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, k: int) -> int:\n        adj = [[0 for _ in range(n)] for _ in range(n)]\n        for u, v, w in flights:\n            adj[u][v] = w\n        # print(adj)\n        \n        dist = [+math.inf for _ in range(n)]\n        min_stops = [+math.inf for _ in range(n)]\n        dist[src], min_stops[src] = 0, 0\n        pq = [(0, 0, src)]\n        while pq:\n            # print(dist)\n            price, stops, u = heapq.heappop(pq)\n            if stops > k:\n                continue\n            if u == dst:\n                break\n            for v, w in enumerate(adj[u]):\n                if w == 0:\n                    continue\n                if dist[v] > price + w:\n                    dist[v] = price + w\n                    heapq.heappush(pq, (dist[v], stops + 1, v))\n                    min_stops[v] = stops\n                elif stops < min_stops[v]:\n                    heapq.heappush(pq, (price + w, stops + 1, v))\n        # print(curr_stops)\n        return dist[dst] if dist[dst] < +math.inf else -1","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"cheapest-flights-within-k-stops","has_notes":false,"flag_type":1}