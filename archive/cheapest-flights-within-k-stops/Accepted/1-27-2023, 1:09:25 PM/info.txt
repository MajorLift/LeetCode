{"id":886500440,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674853765,"status":10,"status_display":"Accepted","runtime":"268 ms","url":"/submissions/detail/886500440/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"15.2 MB","code":"class Solution:\n    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, k: int) -> int:\n        adj = [[0] * n for _ in range(n)]\n        for u, v, w in flights:\n            adj[u][v] = w\n\n        dist = [(+math.inf, +math.inf)] * n\n        dist[src] = (0, 0)\n        pq = [(0, 0, src)]\n        while pq:\n            cost, stops, u = heappop(pq)\n            if u == dst:\n                break\n            for v, w in enumerate(adj[u]):\n                if w == 0:\n                    continue\n                min_cost_v, min_stops_v = dist[v]\n                if cost + w < min_cost_v:\n                    dist[v] = (cost + w, stops)\n                if (cost + w < min_cost_v or stops < min_stops_v) and stops < k:\n                    heappush(pq, (cost + w, stops + 1, v))\n                \n        return dist[dst][0] if dist[dst][0] < +math.inf else -1","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"cheapest-flights-within-k-stops","has_notes":false,"flag_type":1}