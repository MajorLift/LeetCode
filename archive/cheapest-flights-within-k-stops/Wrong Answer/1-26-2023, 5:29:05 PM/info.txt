{"id":885995045,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674782945,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/885995045/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"N/A","code":"class Solution:\n    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, k: int) -> int:\n        adj = [[0] * n for _ in range(n)]\n        for u, v, w in flights:\n            adj[u][v] = w\n\n        min_cost, min_stops = [+math.inf] * n, [+math.inf] * n\n        min_cost[src], min_stops[src] = 0, 0\n        pq = [(0, 0, src)]\n        while pq:\n            cost, stops, u = heappop(pq)\n            if stops > k:\n                continue\n            if u == dst:\n                break\n            for v, w in enumerate(adj[u]):\n                if w > 0:\n                    if cost + w < min_cost[v]:\n                        min_cost[v] = cost + w\n                        min_stops[v] = stops\n                        heappush(pq, (cost + w, stops + 1, v))\n                    elif stops < min_stops[v]:\n                        min_stops[v] = stops\n                        heappush(pq, (cost + w, stops + 1, v))\n                \n        return min_cost[dst] if min_cost[dst] < +math.inf else -1","compare_result":"1111111111111111111111111111111111111111111111111101","title_slug":"cheapest-flights-within-k-stops","has_notes":false,"flag_type":1}