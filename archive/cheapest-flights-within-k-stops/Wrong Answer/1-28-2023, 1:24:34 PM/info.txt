{"id":887064600,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674941074,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/887064600/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"N/A","code":"class Solution:\n    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, k: int) -> int:\n        adj = [[0] * n for _ in range(n)]\n        for u, v, w in flights:\n            adj[u][v] = w\n\n        dist = [(+math.inf, +math.inf)] * n\n        dist[src] = (0, 0)\n        pq = [(0, 0, src)]\n        while pq:\n            cost, stops, u = heappop(pq)\n            if u == dst:\n                break\n            for v, w in enumerate(adj[u]):\n                if w == 0:\n                    continue\n                min_cost_v, min_stops_v = dist[v]\n                cost_v, stops_v = cost + w, stops + 1\n                if cost_v < min_cost_v or (min_cost_v <= cost_v < +math.inf and stops < min_stops_v):\n                    dist[v] = (cost_v, stops)\n                    if stops_v <= k:\n                        heappush(pq, (cost_v, stops_v, v))\n        \n        min_cost_to_dst = dist[dst][0]\n        return min_cost_to_dst if min_cost_to_dst < +math.inf else -1","compare_result":"1111111111111111111111111111011010111111001010011101","title_slug":"cheapest-flights-within-k-stops","has_notes":false,"flag_type":1}