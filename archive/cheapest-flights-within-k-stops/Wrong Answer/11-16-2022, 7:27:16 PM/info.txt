{"id":844942131,"lang":"python3","lang_name":"Python3","time":"9 months, 4 weeks","timestamp":1668655636,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/844942131/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"N/A","code":"class Solution:\n    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, k: int) -> int:\n        adj = [[-1 for _ in range(n)] for _ in range(n)]\n        for u, v, w in flights:\n            adj[u][v] = w\n        print(adj)\n        \n        dist = [+math.inf for _ in range(n)]\n        dist[src] = 0\n        pq = [(0, 0, src)]\n        while pq:\n            print(dist)\n            price, steps, curr = heapq.heappop(pq)\n            if curr == dst:\n                return dist[dst]\n            if steps <= k:\n                for node, cost in enumerate(adj[curr]):\n                    if cost > 0 and dist[node] > dist[curr] + cost:\n                        dist[node] = dist[curr] + cost\n                        heapq.heappush(pq, (dist[node], steps + 1, node))\n        return -1","compare_result":"1111111111100001111111111111111001001111111111111101","title_slug":"cheapest-flights-within-k-stops","has_notes":false,"flag_type":1}