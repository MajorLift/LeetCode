{"id":885992385,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674782384,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/885992385/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"N/A","code":"class Solution:\n    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, k: int) -> int:\n        adj = [[0] * n for _ in range(n)]\n        for u, v, w in flights:\n            adj[u][v] = w\n\n        dist = [+math.inf] * n\n        dist[src] = 0\n        pq = [(dist[src], 0, src)]\n        while pq:\n            price, stops, u = heappop(pq)\n            if stops > k:\n                continue\n            if u == dst:\n                break\n            for v, w in enumerate(adj[u]):\n                if w <= 0:\n                    continue\n                if price + w < dist[v]:\n                    dist[v] = price + w\n                # if stops < min_stops[v]:\n                #     min_stops[v] = stops\n                heappush(pq, (price + w, stops + 1, v))\n                \n        return dist[dst] if dist[dst] < +math.inf else -1","compare_result":"1111111111111111111111111111111111111111111111100000","title_slug":"cheapest-flights-within-k-stops","has_notes":false,"flag_type":1}