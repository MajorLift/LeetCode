{"id":902582205,"lang":"python3","lang_name":"Python3","time":"6 months, 3 weeks","timestamp":1677023649,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/902582205/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"N/A","code":"class Solution:\n    def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n        n1, n2 = len(text1), len(text2)\n        memo = [[0 for _ in range(n2 + 1)] for _ in range(n1 + 1)]\n        for i in range(1 + n1):\n            for j in range(1, n2 + 1):\n                memo[i][j] = 1 + memo[i - 1][j - 1] if text1[i - 1] == text2[j - 1] else max(memo[i - 1][j], memo[i][j - 1])\n        return memo[-1][-1]","compare_result":"1111111011111110111111111111110111111111011011","title_slug":"longest-common-subsequence","has_notes":false,"flag_type":1}