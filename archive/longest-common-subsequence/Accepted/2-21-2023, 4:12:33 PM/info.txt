{"id":902587792,"lang":"python3","lang_name":"Python3","time":"6 months, 3 weeks","timestamp":1677024753,"status":10,"status_display":"Accepted","runtime":"552 ms","url":"/submissions/detail/902587792/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"13.8 MB","code":"class Solution:\n    def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n        shorter, longer = sorted([text1, text2], key=lambda x: len(x))\n        n1, n2 = len(shorter), len(longer)\n        prev, curr = [0] * (n1 + 1), [0] * (n1 + 1)\n        for i in range(1, n2 + 1):\n            for j in range(1, n1 + 1):\n                curr[j] = 1 + prev[j - 1] if shorter[j - 1] == longer[i - 1] \\\n                    else max(prev[j], curr[j - 1])\n            prev, curr = curr, prev\n        return prev[-1]","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false,"flag_type":1}