{"id":903195489,"lang":"javascript","lang_name":"JavaScript","time":"6 months, 3 weeks","timestamp":1677108859,"status":10,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/903195489/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"68.2 MB","code":"/**\n * @param {string} text1\n * @param {string} text2\n * @return {number}\n */\nvar longestCommonSubsequence = function(text1, text2) {\n    const memo = Array.from({ length: text1.length }, () => new Array(text2.length).fill(0))\n    for (let i = 0; i < text1.length; ++i) {\n        for (let j = 0; j < text2.length; ++j) {\n            memo[i][j] = text1[i] === text2[j] \n                ? 1 + ((memo[i - 1] ?? [])[j - 1] ?? 0)\n                : Math.max(((memo[i - 1] ?? [])[j] ?? 0), ((memo[i] ?? [])[j - 1] ?? 0))\n        }\n    }\n    return memo[text1.length - 1][text2.length - 1]\n}","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false,"flag_type":1}