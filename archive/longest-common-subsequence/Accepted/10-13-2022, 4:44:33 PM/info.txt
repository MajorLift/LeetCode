{"id":821959533,"lang":"python3","lang_name":"Python3","time":"11Â months","timestamp":1665704673,"status":10,"status_display":"Accepted","runtime":"946 ms","url":"/submissions/detail/821959533/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"22.7 MB","code":"class Solution:\n    def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n        n1, n2 = len(text1), len(text2)\n        dp = [[0 for j in range(n2 + 1)] for i in range(n1 + 1)]\n        for i in range(n1 - 1, -1, -1):\n            for j in range(n2 - 1, -1, -1):\n                dp[i][j] = 1 + dp[i + 1][j + 1] if text1[i] == text2[j] else max(dp[i + 1][j], dp[i][j + 1])\n        return dp[0][0]                 ","compare_result":"111111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false,"flag_type":1}