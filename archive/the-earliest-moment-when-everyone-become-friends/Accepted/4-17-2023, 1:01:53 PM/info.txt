{"id":935431225,"lang":"python3","lang_name":"Python3","time":"4 months, 3 weeks","timestamp":1681761713,"status":10,"status_display":"Accepted","runtime":"99 ms","url":"/submissions/detail/935431225/","is_pending":"Not Pending","title":"The Earliest Moment When Everyone Become Friends","memory":"14.2 MB","code":"class Solution:\n    def earliestAcq(self, logs: List[List[int]], n: int) -> int:\n        uf = UnionFind(n)\n        for timestamp, x, y in sorted(logs, key=lambda x: x[0]):\n            uf.union(x, y)\n            if uf.groups == 1:\n                return timestamp\n        return -1\n\nclass UnionFind:\n    def __init__(self, size = 0):\n        self.root = list(range(size))\n        self.groups = size\n        self.edges = 0\n\n    def find(self, x):\n        if self.root[x] == x:\n            return x\n        self.root[x] = self.find(self.root[x])\n        return self.root[x]\n        \n    def union(self, x, y):\n        rootX, rootY = self.find(x), self.find(y)\n        if rootX != rootY:\n            self.root[rootY] = rootX\n            self.groups -= 1\n            self.edges += 1\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"the-earliest-moment-when-everyone-become-friends","has_notes":false,"flag_type":1}