{"id":855793504,"lang":"python3","lang_name":"Python3","time":"9Â months, 1Â week","timestamp":1670364767,"status":10,"status_display":"Accepted","runtime":"458 ms","url":"/submissions/detail/855793504/","is_pending":"Not Pending","title":"Combinations","memory":"16 MB","code":"class Solution:\n    def combine(self, n: int, k: int) -> List[List[int]]:\n        output = []\n        def backtrack(start = 1, path = []):\n            if len(path) == k:\n                output.append(path)\n            for num in range(start, n + 1):\n                backtrack(num + 1, path + [num])\n        backtrack()\n        return output","compare_result":"111111111111111111111111111","title_slug":"combinations","has_notes":false,"flag_type":1}