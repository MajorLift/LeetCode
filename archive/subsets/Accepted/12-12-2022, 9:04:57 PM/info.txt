{"id":858981871,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1670907897,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/858981871/","is_pending":"Not Pending","title":"Subsets","memory":"43.5 MB","code":"class Solution {\n    private List<List<Integer>> output;\n    private int[] nums;\n\n    public List<List<Integer>> subsets(int[] nums) {\n        this.output = new ArrayList<>();\n        this.nums = nums;\n        backtrack(new ArrayList<>(), 0);\n        return this.output;\n    }\n\n    private void backtrack(List<Integer> path, int start) {\n        this.output.add(path);\n        for (int i = start; i < this.nums.length; ++i) {\n            List<Integer> newPath = new ArrayList<>(path);\n            newPath.add(nums[i]);\n            backtrack(newPath, i + 1);\n        }\n    }\n    \n}","compare_result":"1111111111","title_slug":"subsets","has_notes":false,"flag_type":1}