{"id":816537253,"lang":"python3","lang_name":"Python3","time":"11Â months, 1Â week","timestamp":1665066883,"status":10,"status_display":"Accepted","runtime":"165 ms","url":"/submissions/detail/816537253/","is_pending":"Not Pending","title":"Merge Intervals","memory":"19.2 MB","code":"class Solution:\n    def merge(self, intervals: List[List[int]]) -> List[List[int]]:\n        n = len(intervals)\n        intervals_sorted = sorted(intervals, key=lambda x: (x[0], x[1]))\n        merged = [intervals_sorted[0]]\n        for i in range(1, n):\n            start_curr, end_curr = intervals_sorted[i]\n            start_merged, end_merged = merged[-1]\n            if end_merged < start_curr:\n                merged.append([start_curr, end_curr])\n            else:\n                merged[-1][1] = max(end_merged, end_curr)\n        return merged","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}