{"id":816530110,"lang":"python3","lang_name":"Python3","time":"11 months, 1 week","timestamp":1665066206,"status":12,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/816530110/","is_pending":"Not Pending","title":"Reaching Points","memory":"N/A","code":"from collections import deque\n\nclass Solution:\n    def reachingPoints(self, sx: int, sy: int, tx: int, ty: int) -> bool:\n        queue = deque([(sx, sy)])\n        visited = set()\n        while queue:\n            curr_x, curr_y = queue.popleft()\n            visited.add((curr_x, curr_y))\n            if (curr_x, curr_y) == (tx, ty):\n                return True\n            elif curr_x > tx or curr_y > ty:\n                continue\n            else:\n                if (curr_x, curr_x + curr_y) not in visited:\n                    queue.append((curr_x, curr_x + curr_y))\n                if (curr_x + curr_y, curr_y) not in visited:\n                    queue.append((curr_x + curr_y, curr_y))\n        return False","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"reaching-points","has_notes":false,"flag_type":1}