{"id":943328842,"lang":"python3","lang_name":"Python3","time":"4 months, 1 week","timestamp":1683045172,"status":10,"status_display":"Accepted","runtime":"3295 ms","url":"/submissions/detail/943328842/","is_pending":"Not Pending","title":"Amount of New Area Painted Each Day","memory":"68.1 MB","code":"class Solution:\n    def amountPainted(self, paint: List[List[int]]) -> List[int]:\n        intervals = []\n        maxEnd = -inf\n        for day, (start, end) in enumerate(paint):\n            heappush(intervals, (start, day, 'START'))\n            heappush(intervals, (end, day, 'END'))\n            maxEnd = max(maxEnd, end)\n        \n        worklog, pq, visited = [0] * len(paint), [], set()\n        for pos in range(maxEnd + 1):\n            while intervals and intervals[0][0] == pos:\n                _, day, _type = heappop(intervals)\n                if _type == 'START':\n                    heappush(pq, day)\n                if _type == 'END':\n                    visited.add(day)\n\n            while pq and pq[0] in visited:\n                heappop(pq)\n            if pq:\n                worklog[pq[0]] += 1\n\n        return worklog","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"amount-of-new-area-painted-each-day","has_notes":false,"flag_type":1}