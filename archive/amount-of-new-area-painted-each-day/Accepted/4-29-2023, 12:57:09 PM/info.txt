{"id":941755323,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682798229,"status":10,"status_display":"Accepted","runtime":"3677 ms","url":"/submissions/detail/941755323/","is_pending":"Not Pending","title":"Amount of New Area Painted Each Day","memory":"69.6 MB","code":"class Solution:\n    def amountPainted(self, paint: List[List[int]]) -> List[int]:\n        n = len(paint)\n        maxEnd = -inf\n        intervals = []\n        for idx, [start, end] in enumerate(paint):\n            heappush(intervals, (start, idx, 'START'))\n            heappush(intervals, (end, idx, 'END'))\n            maxEnd = max(maxEnd, end)\n\n        worklog, pq, visited = [0] * n, [], set()\n        for pos in range(maxEnd + 1):\n            while intervals and intervals[0][0] == pos:\n                _, idx, _type = heappop(intervals)\n                if _type == 'START':\n                    heappush(pq, idx)\n                elif _type == 'END':\n                    visited.add(idx)\n            \n            while pq and pq[0] in visited:\n                heappop(pq)\n            if pq:\n                worklog[pq[0]] += 1\n\n        return worklog","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"amount-of-new-area-painted-each-day","has_notes":true,"flag_type":1}