{"id":939854746,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682483326,"status":10,"status_display":"Accepted","runtime":"2770 ms","url":"/submissions/detail/939854746/","is_pending":"Not Pending","title":"Amount of New Area Painted Each Day","memory":"69.5 MB","code":"class Solution:\n    def amountPainted(self, paint: List[List[int]]) -> List[int]:\n        n = len(paint)\n        records = []\n        maxr = 0\n        for i, (start, end) in enumerate(paint):\n            records.append((start, i, 'START'))\n            records.append((end, i, 'END'))\n            maxr = max(maxr, end)\n        records.sort()\n        \n        ans, pq, visited = [0] * n, [], set()\n        i = 0\n        for pos in range(maxr + 1):\n            while i < len(records) and records[i][0] == pos:\n                pos, idx, _type = records[i]\n                if _type == 'START':\n                    heappush(pq, idx)\n                if _type == 'END':\n                    visited.add(idx)\n                i += 1\n\n            while pq and pq[0] in visited:\n                heappop(pq)\n\n            if pq:\n                ans[pq[0]] += 1\n                \n        return ans\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"amount-of-new-area-painted-each-day","has_notes":false,"flag_type":1}