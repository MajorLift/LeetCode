{"id":911671110,"lang":"python3","lang_name":"Python3","time":"6 months, 1 week","timestamp":1678305546,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/911671110/","is_pending":"Not Pending","title":"Edit Distance","memory":"17 MB","code":"class Solution:\n    def minDistance(self, s: str, t: str) -> int:\n        m, n = len(s), len(t)\n        if m == 0:\n            return n\n        if n == 0:\n            return m\n        s, t = \"0\" + s, \"0\" + t\n        @cache\n        def dp(i, j):\n            if i * j == 0:\n                return i + j\n            elif s[i] == t[j]:\n                return dp(i - 1, j - 1)\n            return 1 + min(dp(i - 1, j), dp(i, j - 1), dp(i - 1, j - 1))\n        return dp(m, n)","compare_resulttitle_slug":"edit-distance","has_notes":false,"flag_type":1}