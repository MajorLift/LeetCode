{"id":911157488,"lang":"python3","lang_name":"Python3","time":"6 months, 1 week","timestamp":1678235643,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/911157488/","is_pending":"Not Pending","title":"Edit Distance","memory":"N/A","code":"class Solution:\n    def minDistance(self, s: str, t: str) -> int:\n        m, n = len(s), len(t)\n        memo = [[0 for _ in range(n)] for _ in range(m)]\n        for i, j in product(range(m), range(n)):\n            if i * j == 0:\n                memo[i][j] = i + j\n            elif s[i] == t[j]:\n                memo[i][j] = memo[i - 1][j - 1]\n            else:\n                memo[i][j] = 1 + min(memo[i - 1][j], memo[i][j - 1], memo[i - 1][j - 1])\n        return memo[-1][-1] + 1","compare_resulttitle_slug":"edit-distance","has_notes":false,"flag_type":1}