{"id":825538007,"lang":"python3","lang_name":"Python3","time":"10 months, 4 weeks","timestamp":1666137248,"status":10,"status_display":"Accepted","runtime":"243 ms","url":"/submissions/detail/825538007/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"18.2 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:\n        setattr(ListNode, \"__lt__\", lambda self, other: self.val < other.val)\n        head = ptr = ListNode()\n        pq = [ll for ll in lists if ll]\n        heapq.heapify(pq)\n        while pq:\n            curr = heapq.heappop(pq)\n            ptr.next = ListNode(curr.val)\n            ptr = ptr.next\n            curr = curr.next\n            if curr:\n                heapq.heappush(pq, curr)\n        return head.next","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists","has_notes":false,"flag_type":1}