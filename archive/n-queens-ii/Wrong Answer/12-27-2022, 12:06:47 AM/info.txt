{"id":866226840,"lang":"python3","lang_name":"Python3","time":"8 months, 2 weeks","timestamp":1672128407,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/866226840/","is_pending":"Not Pending","title":"N-Queens II","memory":"N/A","code":"class Solution:\n    def totalNQueens(self, n: int) -> int:\n        init = [[True for _ in range(n)] for _ in range(n)]\n        output = 0\n        def backtrack(row, col):\n            nonlocal output\n            if row == n - 1:\n                output += 1\n                return\n            \n            for i in range(n):\n                valids[row][i] = False  # row\n                valids[i][col] = False  # col\n                if col + i < n:\n                    if row - i >= 0:\n                        valids[row - i][col + i] = False    # anti-diag\n                    if row + i < n:\n                        valids[row + i][col + i] = False    # diag\n\n            for i in range(n):\n                if valids[row + 1][i]:\n                    backtrack(row + 1, i)\n\n        for i in range(n):\n            valids = copy.deepcopy(init)\n            backtrack(0, i)\n        return output","compare_result":"110000000","title_slug":"n-queens-ii","has_notes":false,"flag_type":1}