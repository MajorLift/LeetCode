{"id":713270465,"lang":"python3","lang_name":"Python3","time":"1 year, 3 months","timestamp":1654230337,"status":10,"status_display":"Accepted","runtime":"680 ms","url":"/submissions/detail/713270465/","is_pending":"Not Pending","title":"N-Queens II","memory":"13.8 MB","code":"class Solution:\n    def totalNQueens(self, n: int) -> int:\n        self.output = 0\n        \n        def backtrack(curr = (0, 0), \n                      count = 0, \n                      stack = [(x, y) for x in range(n) for y in range(n)]):\n            i, j = curr\n            if count == n:\n                self.output += 1\n                \n            new_stack = []\n            for x, y in stack:\n                if x != i and y != j and abs((x - i) / (y - j)) != 1:\n                    new_stack.append((x, y))\n\n            while(len(new_stack)):\n                backtrack(new_stack.pop(), count + 1, new_stack)\n        \n        for i in range(n):\n            backtrack((0, i), 1)\n\n        return self.output","compare_result":"111111111","title_slug":"n-queens-ii","has_notes":false,"flag_type":1}