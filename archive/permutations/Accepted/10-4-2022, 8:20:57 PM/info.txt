{"id":815447068,"lang":"python3","lang_name":"Python3","time":"11 months, 1 week","timestamp":1664940057,"status":10,"status_display":"Accepted","runtime":"94 ms","url":"/submissions/detail/815447068/","is_pending":"Not Pending","title":"Permutations","memory":"14.2 MB","code":"class Solution:\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        n = len(nums)\n        output: List[List[int]] = []\n        def backtrack(tmp: List[int] = []):\n            nonlocal output, nums\n            if len(tmp) == len(nums):\n                output.append(tmp)\n            for i in range(n):\n                if nums[i] not in tmp:\n                    backtrack(tmp + [nums[i]])\n        backtrack()\n        return output\n            ","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false,"flag_type":1}