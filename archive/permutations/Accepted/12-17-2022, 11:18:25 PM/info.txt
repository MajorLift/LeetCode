{"id":861525761,"lang":"python3","lang_name":"Python3","time":"8Â months, 4Â weeks","timestamp":1671347905,"status":10,"status_display":"Accepted","runtime":"70 ms","url":"/submissions/detail/861525761/","is_pending":"Not Pending","title":"Permutations","memory":"14 MB","code":"class Solution:\n    def permute(self, nums: List[int]) -> List[List[int]]:\n        n = len(nums)\n        output: List[List[int]] = []\n        def backtrack(tmp: List[int] = [], used: List[bool] = [False] * n):\n            if len(tmp) == len(nums):\n                output.append(tmp)\n            for i in range(n):\n                if not used[i]:\n                    backtrack(tmp + [nums[i]], used[:i] + [True] + used[i+1:])\n        backtrack()\n        return output","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false,"flag_type":1}