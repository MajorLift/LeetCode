{"id":859925910,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1671064640,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/859925910/","is_pending":"Not Pending","title":"Permutations","memory":"42.8 MB","code":"class Solution {\n    private List<List<Integer>> output = new ArrayList<>();\n    private int[] input;\n\n    public List<List<Integer>> permute(int[] nums) {\n        this.input = nums;\n        backtrack(0);\n        return this.output;\n    }\n\n    private void backtrack(int first) {\n        if (first == this.input.length) {\n            List<Integer> permutation = new ArrayList<>();\n            for (int num : this.input) {\n                permutation.add(num);\n            }\n            this.output.add(permutation);\n            return;\n        }\n        for (int i = first; i < this.input.length; ++i) {\n            swap(first, i);\n            backtrack(first + 1);\n            swap(first, i);\n        }\n    }\n\n    private void swap(int l, int r) {\n        int tmp = this.input[l];\n        this.input[l] = this.input[r];\n        this.input[r] = tmp;\n    }\n}","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false,"flag_type":1}