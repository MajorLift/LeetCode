{"id":389912005,"lang":"python3","lang_name":"Python3","time":"3Â years","timestamp":1599044822,"status":10,"status_display":"Accepted","runtime":"488 ms","url":"/submissions/detail/389912005/","is_pending":"Not Pending","title":"Longest Substring Without Repeating Characters","memory":"13.8 MB","code":"class Solution:\n    def lengthOfLongestSubstring(self, s: str) -> int:\n        maxlen = 0\n        sub = \"\"\n\n        for i,e in enumerate(s):\n            if e not in sub:\n                sub += e\n            else:\n                j = self.findLastOccurence(e, s[:i])\n                sub = s[j+1:i+1]\n                \n            if len(sub) > maxlen:\n                maxlen = len(sub)\n            \n        return maxlen\n        \n    def findLastOccurence(self, char: str, s: str) -> int:\n        for i in range(1,len(s)+1):\n            if s[len(s)-i] == char:\n                return len(s)-i\n        return -1","compare_resulttitle_slug":"longest-substring-without-repeating-characters","has_notes":false,"flag_type":1}