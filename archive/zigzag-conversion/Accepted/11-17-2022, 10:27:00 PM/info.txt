{"id":845653301,"lang":"python3","lang_name":"Python3","time":"9 months, 4 weeks","timestamp":1668752820,"status":10,"status_display":"Accepted","runtime":"145 ms","url":"/submissions/detail/845653301/","is_pending":"Not Pending","title":"Zigzag Conversion","memory":"14.1 MB","code":"class Solution:\n    def convert(self, s: str, numRows: int) -> str:\n        if numRows == 1:\n            return s\n        mat = [[] for _ in range(numRows)]\n        unit = numRows + numRows - 2\n        for i, char in enumerate(s):\n            idx = i % unit\n            if idx < numRows:\n                mat[idx].append(char)\n            else:\n                mat[-(2 + idx % numRows)].append(char)\n\n        return \"\".join([\"\".join(row) for row in mat])","compare_resulttitle_slug":"zigzag-conversion","has_notes":false,"flag_type":1}