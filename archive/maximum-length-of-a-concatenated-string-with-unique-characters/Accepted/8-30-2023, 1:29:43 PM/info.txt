{"id":1036294329,"lang":"python3","lang_name":"Python3","time":"1 week, 5 days","timestamp":1693427383,"status":10,"status_display":"Accepted","runtime":"959 ms","url":"/submissions/detail/1036294329/","is_pending":"Not Pending","title":"Maximum Length of a Concatenated String with Unique Characters","memory":"16.4 MB","code":"class Solution:\n    def maxLength(self, arr: List[str]) -> int:\n        n = len(arr)\n        lens = list(map(len, arr))\n        max_len = 0\n        for k in range(1, n + 1):\n            for idxs in combinations(range(n), k):\n                unique_chars = set()\n                is_all_unique = True\n                for idx in idxs:\n                    idx_chars = set(arr[idx])\n                    if len(idx_chars) < len(arr[idx]) or unique_chars & idx_chars:\n                        is_all_unique = False\n                        break\n                    unique_chars |= idx_chars\n                if is_all_unique:\n                    max_len = max(max_len, sum(lens[i] for i in idxs))\n        return max_len\n            ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-a-concatenated-string-with-unique-characters","has_notes":false,"flag_type":1}