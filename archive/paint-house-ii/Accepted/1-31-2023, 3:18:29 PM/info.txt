{"id":889060200,"lang":"python3","lang_name":"Python3","time":"7 months, 1 week","timestamp":1675207109,"status":10,"status_display":"Accepted","runtime":"204 ms","url":"/submissions/detail/889060200/","is_pending":"Not Pending","title":"Paint House II","memory":"15.4 MB","code":"class Solution:\n    def minCostII(self, costs: List[List[int]]) -> int:\n        n, k = len(costs), len(costs[0])\n        @cache\n        def dp(i, color):\n            if i == n:\n                return 0\n            return costs[i][color] + min([dp(i + 1, j % k) for j in range(color + 1, color + k)])\n        return min([dp(0, j) for j in range(k)])","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"paint-house-ii","has_notes":false,"flag_type":1}