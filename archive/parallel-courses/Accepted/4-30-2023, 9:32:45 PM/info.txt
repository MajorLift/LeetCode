{"id":942411702,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682915565,"status":10,"status_display":"Accepted","runtime":"286 ms","url":"/submissions/detail/942411702/","is_pending":"Not Pending","title":"Parallel Courses","memory":"20.6 MB","code":"class Solution:\n    def minimumSemesters(self, n: int, relations: List[List[int]]) -> int:\n        adj, indegree = [[] for _ in range(n + 1)], [+inf] + [0] * n\n        for u, v in relations:\n            adj[u].append(v)\n            indegree[v] += 1\n        \n        memo = dict()\n        def dfs(u):\n            if u in memo:\n                return memo[u]\n            memo[u] = -1\n            res = list(map(dfs, adj[u]))\n            if any(e == -1 for e in res):\n                return -1\n            memo[u] = 1 + max(res or [0])\n            return memo[u]\n\n        return max([dfs(i) \n            for i,e in enumerate(indegree) \n            if e == 0] or [-1])","compare_result":"111111111111111111111111111111111111111","title_slug":"parallel-courses","has_notes":false,"flag_type":1}