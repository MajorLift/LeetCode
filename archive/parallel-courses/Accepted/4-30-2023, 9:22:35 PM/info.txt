{"id":942407835,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682914955,"status":10,"status_display":"Accepted","runtime":"276 ms","url":"/submissions/detail/942407835/","is_pending":"Not Pending","title":"Parallel Courses","memory":"20.4 MB","code":"class Solution:\n    def minimumSemesters(self, n: int, relations: List[List[int]]) -> int:\n        adj, indegree = [[] for _ in range(n + 1)], [+inf] + [0] * n\n        for u, v in relations:\n            adj[u].append(v)\n            indegree[v] += 1\n        \n        ans = 0\n        visited = set()\n        queue = [i for i,e in enumerate(indegree) if e == 0]\n        while queue:\n            ans += 1\n            nxt_queue = []\n            for u in queue:\n                visited.add(u)\n                for v in adj[u]:\n                    if v in visited:\n                        continue\n                    indegree[v] -= 1\n                    if indegree[v] == 0:\n                        nxt_queue.append(v)\n            queue = nxt_queue\n        return ans if len(visited) == n else -1","compare_result":"111111111111111111111111111111111111111","title_slug":"parallel-courses","has_notes":false,"flag_type":1}