{"id":847985755,"lang":"python3","lang_name":"Python3","time":"9 months, 3 weeks","timestamp":1669117381,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/847985755/","is_pending":"Not Pending","title":"Parallel Courses","memory":"N/A","code":"from collections import deque\n\nclass Solution:\n    # Kahn's algorithm BFS\n    def minimumSemesters(self, n: int, relations: List[List[int]]) -> int:\n        adj = [[] for _ in range(n)]\n        indegree = [0] * n\n        for u, v in relations:\n            adj[u - 1].append(v - 1)\n            indegree[v - 1] += 1\n        ans = 0\n        completed = set()\n        queue = deque([node for node in range(n) if indegree[node] == 0])\n        while queue:\n            ans += 1\n            for u in list(queue):\n                queue.popleft()\n                completed.add(u)\n                for v in adj[u]:\n                    if v not in completed:\n                        indegree[v] -= 1\n                        if indegree[v] == 0:\n                            queue.append(v)\n        return ans if ans > 0 else -1","compare_result":"111111111111111111111111111110011111111","title_slug":"parallel-courses","has_notes":false,"flag_type":1}