{"id":866054498,"lang":"python3","lang_name":"Python3","time":"8 months, 2 weeks","timestamp":1672102623,"status":10,"status_display":"Accepted","runtime":"2250 ms","url":"/submissions/detail/866054498/","is_pending":"Not Pending","title":"Number of Increasing Paths in a Grid","memory":"107.3 MB","code":"from functools import cache\n\nclass Solution:\n    def countPaths(self, grid: List[List[int]]) -> int:\n        MOD = 10 ** 9 + 7\n        m, n = len(grid), len(grid[0])\n        @cache\n        def dfs(r, c):\n            ans = 1\n            for i, j in ((r - 1, c), (r + 1, c), (r, c - 1), (r, c + 1)):\n                if 0 <= i < m and 0 <= j < n and grid[i][j] > grid[r][c]:\n                    ans += dfs(i, j)\n            return ans % MOD\n        return sum(dfs(i, j) for i in range(m) for j in range(n)) % MOD","compare_result":"111111111111111111111111111111111111","title_slug":"number-of-increasing-paths-in-a-grid","has_notes":false,"flag_type":1}