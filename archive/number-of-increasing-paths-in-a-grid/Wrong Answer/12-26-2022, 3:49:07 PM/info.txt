{"id":866034854,"lang":"python3","lang_name":"Python3","time":"8 months, 2 weeks","timestamp":1672098547,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/866034854/","is_pending":"Not Pending","title":"Number of Increasing Paths in a Grid","memory":"N/A","code":"from functools import cache\n\nclass Solution:\n    def countPaths(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        @cache\n        def dfs(r, c):\n            return sum(1 + dfs(i, j) if 0 <= i < m and 0 <= j < n and grid[i][j] > grid[r][c] else 0 \\\n                for i, j in ((r - 1, c), (r + 1, c), (r, c - 1), (r, c + 1))) or 1\n        return sum(dfs(i, j) for i in range(m) for j in range(n))","compare_result":"111000000000000000000000000000001100","title_slug":"number-of-increasing-paths-in-a-grid","has_notes":false,"flag_type":1}