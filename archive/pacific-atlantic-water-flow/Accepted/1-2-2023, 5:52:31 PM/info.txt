{"id":870105093,"lang":"python3","lang_name":"Python3","time":"8 months, 1 week","timestamp":1672710751,"status":10,"status_display":"Accepted","runtime":"488 ms","url":"/submissions/detail/870105093/","is_pending":"Not Pending","title":"Pacific Atlantic Water Flow","memory":"18 MB","code":"from collections import deque\n\nclass Solution:\n    def pacificAtlantic(self, heights: List[List[int]]) -> List[List[int]]:\n        m, n = len(heights), len(heights[0])\n        if m == 1 or n == 1:\n            return [[i, j] for i in range(m) for j in range(n)]\n        \n        adj = [[[] for j in range(n)] for i in range(m)]\n        for i in range(m):\n            for j in range(n):\n                for r, c in ((i - 1, j), (i + 1, j), (i, j - 1), (i, j + 1)):\n                    if 0 <= r < m and 0 <= c < n and heights[i][j] >= heights[r][c]:\n                        adj[r][c].append((i, j))\n\n        p_stack = [(i, 0) for i in range(m)] + [(0, j) for j in range(1, n)]\n        a_stack = [(i, n - 1) for i in range(m)] + [(m - 1, j) for j in range(n - 1)]\n        p_visited, a_visited = set(), set()\n        pacific, atlantic = set(), set()\n\n        while p_stack:\n            i, j = p_stack.pop()\n            pacific.add((i, j))\n            p_visited.add((i, j))\n            for u in adj[i][j]:\n                if u not in p_visited:\n                    p_stack.append(u)\n\n        while a_stack:\n            i, j = a_stack.pop()\n            atlantic.add((i, j))\n            a_visited.add((i, j))\n            for u in adj[i][j]:\n                if u not in a_visited:\n                    a_stack.append(u)\n\n        return [[i, j] for i, j in pacific.intersection(atlantic)]\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"pacific-atlantic-water-flow","has_notes":false,"flag_type":1}