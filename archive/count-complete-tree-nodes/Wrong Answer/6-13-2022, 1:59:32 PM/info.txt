{"id":721544213,"lang":"python3","lang_name":"Python3","time":"1 year, 3 months","timestamp":1655153972,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/721544213/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def countNodes(self, root: Optional[TreeNode]) -> int:\n        curr = root\n        if not curr:\n            return 0\n        height = 1\n        leftwise = 0\n        # find last node\n        while curr.left or curr.right:\n            if curr.right:\n                curr = curr.right\n            else:\n                curr = curr.left\n                leftwise += 1\n            height += 1\n        return (1 << height) - 1 - leftwise","compare_result":"111110010010000000","title_slug":"count-complete-tree-nodes","has_notes":false,"flag_type":1}