{"id":920454217,"lang":"python3","lang_name":"Python3","time":"5 months, 3 weeks","timestamp":1679537806,"status":10,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/920454217/","is_pending":"Not Pending","title":"Partition Labels","memory":"13.9 MB","code":"class Solution:\n    def partitionLabels(self, s: str) -> List[int]:\n        n = len(s)\n        charmap = defaultdict(list)\n        for i, char in enumerate(s):\n            if len(charmap[char]) < 2:\n                charmap[char].append(i)\n            else:\n                charmap[char][1] = i\n        charmap = {k: v[1] for k, v in charmap.items() if len(v) > 1}\n\n        output = []\n        size = last = 0\n        for i, char in enumerate(s):\n            size += 1\n            last = max(last, charmap.get(char, i))\n            if i == last:\n                output.append(size)\n                size = last = 0\n        return output","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-labels","has_notes":false,"flag_type":1}