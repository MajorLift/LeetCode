{"id":942845188,"lang":"python3","lang_name":"Python3","time":"4 months, 1 week","timestamp":1682972596,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/942845188/","is_pending":"Not Pending","title":"Delete Nodes And Return Forest","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def delNodes(self, root: Optional[TreeNode], to_delete: List[int]) -> List[TreeNode]:\n        to_delete = set(to_delete)\n        output = []\n        \n        def dfs(curr):\n            if not curr: return None            \n            curr.left, curr.right = map(dfs, (curr.left, curr.right))\n            if curr.val in to_delete:\n                if curr.left: output.append(curr.left)\n                if curr.right: output.append(curr.right)\n                return None\n            return curr\n\n        dfs(root)\n        output.append(root)\n        return output","compare_result":"111101010100111110010101011110011101110101101111111111111010101111001111011011100101111001111111111110010100111","title_slug":"delete-nodes-and-return-forest","has_notes":false,"flag_type":1}