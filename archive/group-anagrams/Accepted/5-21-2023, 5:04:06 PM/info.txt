{"id":954777525,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1684713846,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/954777525/","is_pending":"Not Pending","title":"Group Anagrams","memory":"19 MB","code":"class Solution {\npublic:\n    vector<vector<string>> groupAnagrams(vector<string>& strs) {\n        unordered_map<string, vector<string>> mp;\n        for (const auto& s : strs) {\n            mp[strSort(s)].push_back(s);\n        }\n        vector<vector<string>> anagrams;\n        anagrams.reserve(mp.size());\n        for (const auto& p : mp) {\n            anagrams.push_back(move(p.second));\n        }\n        return anagrams;\n    }\nprivate:\n    string strSort(string s) {\n        int counter[26] = {0};\n        for (const char c : s) {\n            counter[c - 'a']++;\n        }\n        string t;\n        for (int c = 0; c < 26; ++c) {\n            t += string(counter[c], c + 'a');\n        }\n        return t;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}