{"id":880797663,"lang":"python3","lang_name":"Python3","time":"7 months, 3 weeks","timestamp":1674074996,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/880797663/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"N/A","code":"class Solution:\n    def maxProduct(self, nums: List[int]) -> int:\n        n = len(nums)\n        global_max, local_max = nums[0], nums[0]\n        for i in range(1, n):\n            local_max = max(0, local_max * nums[i])\n            global_max = max(global_max, local_max)\n        return global_max","compare_result":"111111111011001000010000001101100100000101000001000110010100011100110010010110010110001010010001010100000000000100101000001010010010000100000001001010001000011000000000110100010000000000010","title_slug":"maximum-product-subarray","has_notes":false,"flag_type":1}