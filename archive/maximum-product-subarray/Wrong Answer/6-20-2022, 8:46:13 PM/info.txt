{"id":727280645,"lang":"python3","lang_name":"Python3","time":"1 year, 2 months","timestamp":1655783173,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/727280645/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"N/A","code":"class Solution:\n    def maxProduct(self, nums: List[int]) -> int:\n        if not nums:\n            return None\n        dp = [nums[0]] + [None] * (len(nums) - 1)\n        for i in range(1, len(nums)):\n            dp[i] = max(nums[i], dp[i - 1] * nums[i]) \n        return max(dp)","compare_result":"11111111111110101101000000111110111110110101111110011101011011111111011011111111111010101011110101010110100010010011110010101001111000011011000100101000110011100101100011010001000000000001","title_slug":"maximum-product-subarray","has_notes":false,"flag_type":1}