{"id":812332815,"lang":"python3","lang_name":"Python3","time":"11 months, 2 weeks","timestamp":1664578704,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/812332815/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"N/A","code":"class Solution:\n    def maxProduct(self, nums: List[int]) -> int:\n        n = len(nums)\n        dp = [nums[0]] + [0 for _ in range(n - 1)]\n        for i in range(1, n):\n            dp[i] = max(max(dp[i - 1], 1) * nums[i], 0)\n        return max(dp)","compare_result":"11111000111010001101000000010100111100110101011110000101001011101010011011111111101000101010110100010110100010010011100010001000111000011010000100101000110011100101100010010001000000000001","title_slug":"maximum-product-subarray","has_notes":false,"flag_type":1}