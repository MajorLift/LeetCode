{"id":812332349,"lang":"python3","lang_name":"Python3","time":"11 months, 2 weeks","timestamp":1664578624,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/812332349/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"N/A","code":"class Solution:\n    def maxProduct(self, nums: List[int]) -> int:\n        n = len(nums)\n        dp = [nums[0]] + [0 for _ in range(n - 1)]\n        for i in range(1, n):\n            dp[i] = max(dp[i - 1], 0) * nums[i]\n        return max(dp)","compare_result":"11111000101000000001000000010100010000010100000100000001000001100010001001011001001000101000000100010000000000010010100000001000001000010000000000100000100001000000000010010001000000000001","title_slug":"maximum-product-subarray","has_notes":false,"flag_type":1}