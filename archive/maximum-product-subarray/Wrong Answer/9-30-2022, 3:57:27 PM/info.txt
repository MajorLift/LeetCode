{"id":812332486,"lang":"python3","lang_name":"Python3","time":"11 months, 2 weeks","timestamp":1664578647,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/812332486/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"N/A","code":"class Solution:\n    def maxProduct(self, nums: List[int]) -> int:\n        n = len(nums)\n        dp = [nums[0]] + [0 for _ in range(n - 1)]\n        for i in range(1, n):\n            dp[i] = max(dp[i - 1] * nums[i], 0)\n        return max(dp)","compare_result":"11111111101100100001000000110110010000010100000100011001010001110011001001011001011000101001000101010000000000010010100000101001001000010000000100101000100001100000000011010001000000000001","title_slug":"maximum-product-subarray","has_notes":false,"flag_type":1}