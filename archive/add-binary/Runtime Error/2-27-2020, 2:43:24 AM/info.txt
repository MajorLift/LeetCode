{"id":307371245,"lang":"c","lang_name":"C","time":"3 years, 6 months","timestamp":1582800204,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/307371245/","is_pending":"Not Pending","title":"Add Binary","memory":"N/A","code":"int charLen(char* s){\n    int i = -1;\n    while(s[++i] != '\\0');\n    return i;\n}\n\nvoid charReverse(char* s){\n    char* head_ptr = s;\n    char* tail_ptr = s;\n    while(*tail_ptr++ != '\\0');\n    --tail_ptr;\n    \n    while(head_ptr != tail_ptr){\n        char tmp = *tail_ptr;\n        *tail_ptr = *head_ptr;\n        *head_ptr = tmp;\n        head_ptr++;\n        tail_ptr--;\n    }    \n}\n\nchar * addBinary(char * a, char * b){\n    int alen = charLen(a);\n    int blen = charLen(b);\n    int maxlen;\n    if(alen >= blen) maxlen = alen;\n    else maxlen = blen;\n    char* ret = (char*) malloc(sizeof(char) * (maxlen + 1));\n    int i = 0;\n    int j = 0;\n    while(++i <= alen && ++j <= blen){\n        if(ret[i - 1] == '\\0') ret[i - 1] = 0;\n        int sum = a[alen - i] + b[blen - j] + ret[i - 1];\n        if(sum == 3){\n            ret[i - 1] = 1;\n            ret[i] = 1;\n        }else if(sum == 2){\n            ret[i - 1] = 0;\n            ret[i] = 1;\n        }else if(sum == 1){\n            ret[i - 1] = 1;\n        }\n    }\n    charReverse(ret);\n    return ret;\n}\n\n","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"add-binary","has_notes":false,"flag_type":1}