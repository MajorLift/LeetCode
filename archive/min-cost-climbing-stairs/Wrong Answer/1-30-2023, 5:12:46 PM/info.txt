{"id":888447059,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1675127566,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/888447059/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"N/A","code":"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        @cache\n        def dp(idx):\n            if idx <= 2:\n                return cost[idx - 1]\n            return cost[idx] + min(dp(idx - 1), dp(idx - 2))\n        return dp(len(cost) - 1)","compare_result":"1110001100111011111000010000100001100001000010000110000100001000011000110011101111100011001110111110000100001000011000010000100001100011001110111110001100111011111000110011101111100001000010000110001100111011111000110011101111100011001110111110001100111011111010000000000010001000000","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}