{"id":889735096,"lang":"python3","lang_name":"Python3","time":"7 months, 1 week","timestamp":1675297772,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/889735096/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"N/A","code":"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        n = len(cost)\n        cost += [0]\n        @cache\n        def dp(i):\n            if i >= n - 1:\n                return cost[i]\n            return min(dp(i + 1) + cost[i + 1], dp(i + 2) + cost[i + 2])\n        return dp(0)","compare_result":"1111111111101110011111111111111011111111111111111111111111111111111111111110111001000010001100101000000000100011000000000000001000111111111011100100001000110010100000000010001100000000000000100011111111101110010000100011001010000000001000110000000000000010000001100000010000000000000","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}