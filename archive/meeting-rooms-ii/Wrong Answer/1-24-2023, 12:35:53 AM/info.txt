{"id":884250068,"lang":"python3","lang_name":"Python3","time":"7 months, 3 weeks","timestamp":1674549353,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/884250068/","is_pending":"Not Pending","title":"Meeting Rooms II","memory":"N/A","code":"class Solution:\n    def minMeetingRooms(self, intervals: List[List[int]]) -> int:\n        intervals.sort(key=lambda x: x[1])\n        rooms = [intervals[0][1]]\n        ans = 1\n        for start, end in intervals[1:]:\n            if rooms[0] <= start:\n                heappop(rooms)\n            heappush(rooms, end)\n            ans = max(ans, len(rooms))\n        return ans","compare_result":"111111111111111111111111111111111111111111111111110111101111111111111110000011","title_slug":"meeting-rooms-ii","has_notes":false,"flag_type":1}