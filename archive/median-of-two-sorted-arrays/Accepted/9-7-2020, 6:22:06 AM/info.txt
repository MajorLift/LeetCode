{"id":392292195,"lang":"python3","lang_name":"Python3","time":"3Â years","timestamp":1599484926,"status":10,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/392292195/","is_pending":"Not Pending","title":"Median of Two Sorted Arrays","memory":"14 MB","code":"class Solution:\n    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:\n        m = len(nums1)\n        n = len(nums2)\n        odd = False\n        if (m+n) % 2 == 1:\n            odd = True\n        limit = int((m+n) // 2)\n            \n        merged = []\n        \n        i = 0\n        j = 0\n        idx = 0\n        while True:\n            if idx > limit or (i >= m and j >= n):\n                break\n            elif i >= m:\n                while j < n:\n                    merged.append(nums2[j])\n                    j += 1\n                    idx += 1\n            elif j >= n:\n                while i < m:\n                    merged.append(nums1[i])\n                    i += 1\n                    idx += 1\n            else:\n                if nums1[i] <= nums2[j]:\n                    merged.append(nums1[i])\n                    i += 1\n                else:\n                    merged.append(nums2[j])\n                    j += 1\n                idx += 1\n        \n        if odd:\n            return float(merged[limit])\n        else:\n            return (merged[limit] + merged[limit-1]) / 2\n        \n            ","compare_resulttitle_slug":"median-of-two-sorted-arrays","has_notes":false,"flag_type":1}