{"id":884591507,"lang":"python3","lang_name":"Python3","time":"7 months, 2 weeks","timestamp":1674589923,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/884591507/","is_pending":"Not Pending","title":"Find Servers That Handled Most Number of Requests","memory":"N/A","code":"class Solution:\n    def busiestServers(self, k: int, arrival: List[int], load: List[int]) -> List[int]:\n        cnt = defaultdict(int)\n        busy = dict()\n        available = set([i for i in range(k)])\n        for i, (start, duration) in enumerate(zip(arrival, load)):\n            for server_id, server_end in list(busy.items()):\n                if start >= server_end:\n                    del busy[server_id]\n                    available.add(server_id)\n            if not available:\n                continue\n            j = 0\n            while (i + j) % k not in available:\n                j += 1\n            assigned = (i + j) % k\n            cnt[assigned] += 1\n            available.remove(assigned)\n            busy[assigned] = start + duration\n        return [k for k, v in cnt.items() if v == max(cnt.values())]","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000","title_slug":"find-servers-that-handled-most-number-of-requests","has_notes":false,"flag_type":1}