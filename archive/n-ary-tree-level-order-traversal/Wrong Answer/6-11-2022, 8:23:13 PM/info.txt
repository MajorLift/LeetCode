{"id":720127030,"lang":"python3","lang_name":"Python3","time":"1 year, 3 months","timestamp":1655004193,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/720127030/","is_pending":"Not Pending","title":"N-ary Tree Level Order Traversal","memory":"N/A","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val=None, children=None):\n        self.val = val\n        self.children = children\n\"\"\"\n\nclass Solution:\n    def levelOrder(self, root: 'Node') -> List[List[int]]:\n        if not root:\n            return\n        output = [[root.val]]\n        queue = deque([root])\n        while queue:\n            curr = queue.popleft()\n            output.append([])\n            \n            for node in curr.children:\n                if node:\n                    queue.append(node) \n                    output[-1].append(node.val)\n                    \n        return list(filter(lambda x: len(x) > 0, output))","compare_result":"10110101001100000000101111111001111110","title_slug":"n-ary-tree-level-order-traversal","has_notes":false,"flag_type":1}