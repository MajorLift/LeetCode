{"id":720129935,"lang":"python3","lang_name":"Python3","time":"1 year, 3 months","timestamp":1655004402,"status":10,"status_display":"Accepted","runtime":"90 ms","url":"/submissions/detail/720129935/","is_pending":"Not Pending","title":"N-ary Tree Level Order Traversal","memory":"16 MB","code":"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val=None, children=None):\n        self.val = val\n        self.children = children\n\"\"\"\n\nclass Solution:\n    def levelOrder(self, root: 'Node') -> List[List[int]]:\n        if not root:\n            return\n        output = [[root.val]]\n        queue = deque([(root, 0)])\n        prev_height = -1\n        while queue:\n            curr, curr_height = queue.popleft()\n            if curr_height > prev_height:\n                output.append([])\n            \n            for node in curr.children:\n                if node:\n                    queue.append((node, curr_height + 1)) \n                    output[curr_height + 1].append(node.val)\n                    \n        return list(filter(lambda x: len(x) > 0, output))","compare_result":"11111111111111111111111111111111111111","title_slug":"n-ary-tree-level-order-traversal","has_notes":false,"flag_type":1}