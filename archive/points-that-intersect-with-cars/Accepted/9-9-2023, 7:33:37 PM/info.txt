{"id":1045186902,"lang":"python3","lang_name":"Python3","time":"2Â days, 14Â hours","timestamp":1694313217,"status":10,"status_display":"Accepted","runtime":"87 ms","url":"/submissions/detail/1045186902/","is_pending":"Not Pending","title":"Points That Intersect With Cars","memory":"16.4 MB","code":"class Solution:\n    def numberOfPoints(self, nums: List[List[int]]) -> int:\n        nums.sort(key=lambda x: x[0])\n        merged = [tuple(nums[0])]\n        for start, end in nums[1:]:\n            start_prev, end_prev = merged[-1]\n            if start <= end_prev:\n                merged[-1] = min(start_prev, start), max(end_prev, end)\n            else:\n                merged.append((start, end))\n        return sum(end - start + 1 for start, end in merged)\n            ","compare_resulttitle_slug":"points-that-intersect-with-cars","has_notes":false,"flag_type":1}