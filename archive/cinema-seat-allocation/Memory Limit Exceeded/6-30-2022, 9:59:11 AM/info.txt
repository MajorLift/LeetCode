{"id":735226411,"lang":"python3","lang_name":"Python3","time":"1 year, 2 months","timestamp":1656608351,"status":12,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/735226411/","is_pending":"Not Pending","title":"Cinema Seat Allocation","memory":"N/A","code":"class Solution:\n    def maxNumberOfFamilies(self, n: int, reservedSeats: List[List[int]]) -> int:\n        LEFT, MID, RIGHT = range(2, 6), range(4, 8), range(6, 10)\n        availability = [[]] + [[True, True, True] for _ in range(n)]\n        for [row, seat] in reservedSeats:\n            if seat in LEFT:\n                availability[row][0] = False\n            if seat in MID:\n                availability[row][1] = False\n            if seat in RIGHT:\n                availability[row][2] = False\n        # return reduce(lambda acc, curr: acc + (2 if curr[0] and curr[2] else 1 if any(curr) else 0), availability[1:], 0)\n        counter = 0\n        for [l, m, r] in availability[1:]:\n            if l and r:\n                counter += 2\n            elif any([l, m, r]):\n                counter += 1\n        return counter","compare_result":"11111111111111111111111111111111111111111111111100000","title_slug":"cinema-seat-allocation","has_notes":false,"flag_type":1}