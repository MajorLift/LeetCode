{"id":939829227,"lang":"python3","lang_name":"Python3","time":"4 months, 2 weeks","timestamp":1682479356,"status":10,"status_display":"Accepted","runtime":"1253 ms","url":"/submissions/detail/939829227/","is_pending":"Not Pending","title":"Shortest Subarray with Sum at Least K","memory":"30.6 MB","code":"class Solution:\n    def shortestSubarray(self, nums: List[int], k: int) -> int:\n        n = len(nums)\n        psums = [0] + list(accumulate(nums, operator.add))\n        monoq = deque()\n        ans = +inf\n        for r in range(n + 1):\n            while monoq and psums[r] <= psums[monoq[-1]]:\n                monoq.pop()\n            while monoq and psums[r] - psums[monoq[0]] >= k:\n                ans = min(ans, r - monoq.popleft())\n            monoq.append(r)\n        return ans if ans < +inf else -1","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-subarray-with-sum-at-least-k","has_notes":false,"flag_type":1}