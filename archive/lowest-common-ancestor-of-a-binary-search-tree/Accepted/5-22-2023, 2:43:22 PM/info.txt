{"id":955399920,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1684791802,"status":10,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/955399920/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"23.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        return ((root -> val > p -> val) && (root -> val > q -> val))\n            ? lowestCommonAncestor(root -> left, p, q) \n            : ((root -> val < p -> val) && (root -> val < q -> val)) \n            ? lowestCommonAncestor(root -> right, p, q) \n            : root;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false,"flag_type":1}