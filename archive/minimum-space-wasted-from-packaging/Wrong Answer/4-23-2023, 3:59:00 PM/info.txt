{"id":938662185,"lang":"python3","lang_name":"Python3","time":"4 months, 3 weeks","timestamp":1682290740,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/938662185/","is_pending":"Not Pending","title":"Minimum Space Wasted From Packaging","memory":"N/A","code":"class Solution:\n    def minWastedSpace(self, packages: List[int], boxes: List[List[int]]) -> int:\n        MOD = 10 ** 9 + 7\n        packages.sort()\n        boxes = [sorted(catalogue) for catalogue in boxes]\n        if packages[-1] > max(max(b) for b in boxes):\n            return -1\n        global_min = +inf\n        for catalogue in boxes:\n            wasted = 0\n            for size in packages:\n                idx = bisect_left(catalogue, size)\n                if idx == len(catalogue):\n                    continue\n                wasted += catalogue[idx] - size\n            global_min = min(global_min, wasted)\n        return global_min % MOD","compare_result":"111010011010011010010010000000010000000000","title_slug":"minimum-space-wasted-from-packaging","has_notes":false,"flag_type":1}