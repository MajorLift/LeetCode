{"id":942936964,"lang":"python3","lang_name":"Python3","time":"4 months, 1 week","timestamp":1682991705,"status":10,"status_display":"Accepted","runtime":"1468 ms","url":"/submissions/detail/942936964/","is_pending":"Not Pending","title":"Minimum Space Wasted From Packaging","memory":"40.8 MB","code":"class Solution:\n    def minWastedSpace(self, packages: List[int], boxes: List[List[int]]) -> int:\n        MOD = 10 ** 9 + 7\n        n, m = map(len, (packages, boxes))\n        pkg_sum = sum(packages)\n        packages.sort()\n        suppliers = [sorted(catalogue) for catalogue in boxes]\n        global_min = +inf\n        for catalogue in suppliers:\n            if catalogue[-1] < packages[-1]:\n                continue\n            total = currIdx = prevIdx = 0\n            for box in catalogue:\n                currIdx = bisect_right(packages, box)\n                total += (currIdx - prevIdx) * box\n                prevIdx = currIdx\n            global_min = min(global_min, total - pkg_sum)\n        return global_min % MOD if global_min < +inf else -1","compare_result":"111111111111111111111111111111111111111111","title_slug":"minimum-space-wasted-from-packaging","has_notes":false,"flag_type":1}