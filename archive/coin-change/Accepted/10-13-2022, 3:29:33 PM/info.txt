{"id":821933591,"lang":"python3","lang_name":"Python3","time":"11Â months","timestamp":1665700173,"status":10,"status_display":"Accepted","runtime":"1054 ms","url":"/submissions/detail/821933591/","is_pending":"Not Pending","title":"Coin Change","memory":"14.2 MB","code":"class Solution:\n    def coinChange(self, coins: List[int], amount: int) -> int:\n        # output = []\n        # def backtrack(tmp = [], remainder = amount):\n        #     if remainder == 0:\n        #         output.append(len(tmp))\n        #     if remainder > 0:\n        #         for coin in coins:\n        #             backtrack(tmp + [coin], remainder - coin)\n        # backtrack()\n        # return min(output) if len(output) > 0 else -1\n        \n        dp = [0 for _ in range(amount + 1)]\n        for i in range(1, amount + 1):\n            dp[i] = min(dp[i - coin] + 1 if i >= coin else math.inf for coin in coins)\n        return [dp[amount], -1][dp[amount] == math.inf]\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"coin-change","has_notes":false,"flag_type":1}