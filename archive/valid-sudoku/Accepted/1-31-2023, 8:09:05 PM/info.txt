{"id":889163972,"lang":"python3","lang_name":"Python3","time":"7 months, 1 week","timestamp":1675224545,"status":10,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/889163972/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"14 MB","code":"class Solution:\n    def isValidSudoku(self, board: List[List[str]]) -> bool:\n        for i in range(9):\n            row_nums, col_nums = [], []\n            for j in range(9):\n                if board[i][j] != \".\":\n                    row_nums += board[i][j]\n                if board[j][i] != \".\":\n                    col_nums += board[j][i]\n            if len(row_nums) != len(set(row_nums)) or len(col_nums) != len(set(col_nums)):\n                return False\n        \n        for i in range(3):\n            for j in range(3):\n                box_nums = []\n                for k in range(3):\n                    for h in range(3):\n                        if board[i * 3 + k][j * 3 + h] != \".\":\n                            box_nums += board[i * 3 + k][j * 3 + h]\n                if len(box_nums) != len(set(box_nums)):\n                    return False\n                    \n        return True","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-sudoku","has_notes":false,"flag_type":1}