{"id":811775094,"lang":"python3","lang_name":"Python3","time":"11 months, 2 weeks","timestamp":1664505677,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/811775094/","is_pending":"Not Pending","title":"Longest Path With Different Adjacent Characters","memory":"N/A","code":"class Solution:\n    def longestPath(self, parent: List[int], s: str) -> int:\n        n = len(parent)\n        children = [[] for _ in range(n)]\n        for child, node in enumerate(parent[1:]):\n            children[node].append(child)\n        print(children)\n        \n        # ans = 1\n        # def dfs(n):\n        #     nonlocal ans\n        #     if not children[n]:\n        #         return 1\n            \n            \n            \n\n        # dfs(0)\n        # return ans","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-path-with-different-adjacent-characters","has_notes":false,"flag_type":1}