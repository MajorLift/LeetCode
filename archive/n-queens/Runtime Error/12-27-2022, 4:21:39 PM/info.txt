{"id":866629509,"lang":"javascript","lang_name":"JavaScript","time":"8 months, 2 weeks","timestamp":1672186899,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/866629509/","is_pending":"Not Pending","title":"N-Queens","memory":"N/A","code":"/**\n * @param {number} n\n * @return {string[][]}\n */\nvar solveNQueens = function(n) {\n    const output = []\n    const board = Array.from({ length: n }, () => new Array(n).fill(true))\n    ;(function backtrack(row = 0, state = board) {\n        if (row === n) {\n            output.push(state.map((row) => row.map((e) => (e !== \"Q\" ? \".\" : \"Q\").join(''))))\n            return\n        }\n        for (let col = 0; col < n; ++col) {\n            if (!state[row][col]) continue\n            const newState = JSON.parse(JSON.stringify(state))\n            for (let i = 0; i < n; ++i) {\n                newState[row][i] = false\n                newState[i][col] = false\n                if (row + i < n) {\n                    if (col + i < n) newState[row + i][col + i] = false\n                    if (col - i >= 0) newState[row + i][col - i] = false\n                }\n            }\n            newState[row][col] = \"Q\"\n            backtrack(row + 1, newState)\n        }\n    })()\n    return output    \n}","compare_result":"000000000","title_slug":"n-queens","has_notes":false,"flag_type":1}