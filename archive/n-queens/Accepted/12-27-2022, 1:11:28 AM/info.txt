{"id":866253523,"lang":"javascript","lang_name":"JavaScript","time":"8 months, 2 weeks","timestamp":1672132288,"status":10,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/866253523/","is_pending":"Not Pending","title":"N-Queens","memory":"45.4 MB","code":"/**\n * @param {number} n\n * @return {string[][]}\n */\nvar solveNQueens = function(n) {\n    const output = []\n    const init = Array.from(new Array(n), () => new Array(n).fill(\".\"))\n    const [cols, diags, antiDiags] = Array.from(new Array(3), () => new Set())\n    ;(function backtrack(row = 0, state = init) {\n        if (row === n) {\n            output.push(state.map((row) => row.join('')))\n            return\n        }\n        for (let col = 0; col < n; ++col) {\n            if (cols.has(col) || diags.has(row - col) || antiDiags.has(row + col)) continue\n            cols.add(col); diags.add(row - col); antiDiags.add(row + col)\n            state[row][col] = \"Q\"\n            backtrack(row + 1, state)\n            state[row][col] = \".\"\n            cols.delete(col); diags.delete(row - col); antiDiags.delete(row + col)\n        }\n    })()\n    return output\n};","compare_result":"111111111","title_slug":"n-queens","has_notes":false,"flag_type":1}